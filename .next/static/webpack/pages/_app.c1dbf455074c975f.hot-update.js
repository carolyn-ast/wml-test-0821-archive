"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/StateContext.js":
/*!*********************************!*\
  !*** ./context/StateContext.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StateContext\": function() { return /* binding */ StateContext; },\n/* harmony export */   \"useStateContext\": function() { return /* binding */ useStateContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_timezone_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/timezone_utils */ \"./lib/timezone_utils.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst Context = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst StateContext = (param)=>{\n    let { children  } = param;\n    _s();\n    // customers\n    const [customers, setCustomers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentCustomer, setCurrentCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [filteredCustomersByID, setFilteredCustomersByID] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByEmail, setFilteredCustomersByEmail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByWechat, setFilteredCustomersByWechat] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // internal landlords\n    const [matchedLandlords, setMatchedLandlords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // external landlords\n    const [newHouses, setNewHouses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showProfile, setShowProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [developers, setDevelopers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const dayDifference = (date1, date2)=>{\n        var differenceInTime = date2.getTime() - date1.getTime();\n        // To calculate the no. of days between two dates\n        var differenceInDays = differenceInTime / (1000 * 3600 * 24);\n        return differenceInDays;\n    };\n    const prioritizing_cutsomer = (customers)=>{\n        //起租日没过的 优先级更高 离起租日越近 优先级更高\n        //起租日过了的 离起租日越近 优先级越高\n        //起租日没有过的优先级超过起租日已经过了的\n        const c_rent_date_not_pass = customers.filter((customer)=>{\n            const today = new Date();\n            const rent_day = new Date(customer.rent_date);\n            if (dayDifference(today, rent_day) >= 0) {\n                return customer;\n            }\n        });\n        console.log(c_rent_date_not_pass);\n        c_rent_date_not_pass.sort(function(a, b) {\n            return new Date(a.rent_date) - new Date(b.rent_date);\n        });\n        const c_rent_date_passed = customers.filter((customer)=>{\n            const today = new Date();\n            const rent_day = new Date(customer.rent_date);\n            if (dayDifference(today, rent_day) < 0) {\n                return customer;\n            }\n        });\n        console.log(c_rent_date_passed);\n        c_rent_date_passed.sort(function(a, b) {\n            return new Date(b.rent_date) - new Date(a.rent_date);\n        });\n        const customerList = c_rent_date_not_pass.concat(c_rent_date_passed);\n        return customerList;\n    };\n    const updateCurrentCustomer = (customer)=>{\n        const updatedCustomer = customers.map((cus)=>{\n            if (cus.UserId === customer.UserId) {\n                setCurrentCustomer(customer);\n                return customer;\n            }\n            return cus;\n        });\n        setCustomers(updatedCustomer);\n    };\n    const ifLandlordMatched = (landlordItem)=>{\n        const filList = matchedLandlords.filter((landlord)=>{\n            if (landlord.listingAdd === landlordItem.listingAdd) {\n                return landlord;\n            }\n        });\n        return filList.length > 0;\n    };\n    const validateCanadianPostalCode = (postalCode)=>{\n        const postalCodeRegex = new RegExp(/^(?:[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d)$/i);\n        return postalCodeRegex.test(postalCode);\n    };\n    const validateStartTime = (startTime)=>{\n        const startTimeRegex = new RegExp(/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/i);\n        return startTimeRegex.test(startTime);\n    };\n    const validateEmail = (email)=>{\n        const emailRegex = new RegExp(/^[a-z0-9._-]{1,64}@[a-z0-9.]{1,64}$/i);\n        return emailRegex.test(email);\n    };\n    const unique_internal = (arr)=>{\n        return arr.filter((v, i, a)=>a.findIndex((v2)=>v2.listingAdd === v.listingAdd) === i);\n    };\n    const unique_external = (arr)=>{\n        return arr.filter((v, i, a)=>a.findIndex((v2)=>v2.listingUrl === v.listingUrl) === i);\n    };\n    const handleMatchChange = async (customer)=>{\n        const response = await fetch(\"http://119.3.241.33:3000/customers/\".concat(customer.UserId), {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Authorization\": \"Bearer yvmFp/J8vOs7QLcs1fcVpoz0ChDfoZZ5kI/l1JdyR0pbEyg7B9XIviOHZmzDV/y/HTwDfGUNt5+VnY0P\"\n            }\n        });\n        console.log(response);\n        if (response.status === 200) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Matching is now processing.\");\n            const response_extenal = await fetch(\"http://119.3.241.33:3000/external/\".concat(customer.UserId), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Authorization\": \"Bearer yvmFp/J8vOs7QLcs1fcVpoz0ChDfoZZ5kI/l1JdyR0pbEyg7B9XIviOHZmzDV/y/HTwDfGUNt5+VnY0P\"\n                }\n            });\n            console.log(response_extenal);\n            if (response_extenal.status === 200) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"External Matching succeeded.\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"External Matching error.\");\n            }\n            const response_internal = await fetch(\"http://119.3.241.33:3000/internal/\".concat(customer.UserId), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Authorization\": \"Bearer yvmFp/J8vOs7QLcs1fcVpoz0ChDfoZZ5kI/l1JdyR0pbEyg7B9XIviOHZmzDV/y/HTwDfGUNt5+VnY0P\"\n                }\n            });\n            console.log(response_internal);\n            if (response_internal.status === 200) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Internal Matching succeeded.\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Internal Matching error.\");\n            }\n        } else {\n            if (customer.rent_status === \"YES\" || customer.rent_status === \"DELETED\" || customer.rent_status === \"看房客户\") {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"It is \");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Matching error.\");\n            }\n        }\n    };\n    const handleCustomerUpdate = async (updateItems, customer)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        if (!validateCanadianPostalCode(customer[\"请填写您的目的地邮编，更好获得附近邻里的帮助\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid postal code A1A 1A1.\");\n        } else if (!validateStartTime(customer[\"rent_date\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid start time yyyy-mm-dd.\");\n        } else if (!validateEmail(customer[\"mail\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid Email. xxx@x.x\");\n        } else {\n            const response = await fetch(\"/api/customers/\".concat(customer.UserId), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    vals: {\n                        ...updateItems,\n                        \"LastUpdateTime\": (0,_lib_timezone_utils__WEBPACK_IMPORTED_MODULE_4__.timezoneFormatter)(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()))\n                    }\n                })\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                if (!data.error) {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the customer information\");\n                    const new_customer = {\n                        ...customer,\n                        \"LastUpdateTime\": (0,_lib_timezone_utils__WEBPACK_IMPORTED_MODULE_4__.timezoneFormatter)(dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()))\n                    };\n                    updateCurrentCustomer(new_customer);\n                    return;\n                } else {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the database. Error: (\".concat(data.error.code, \"), Please check the input or try again later.\"));\n                    return;\n                }\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n        }\n    };\n    const getMatchedLandlords = async (tables, ifInternal)=>{\n        let databaseError = false;\n        let serverError = false;\n        let landlords = [];\n        const cities = Object.entries(tables).map((param)=>{\n            let [key, value] = param;\n            return value;\n        });\n        for(const city in cities){\n            const values = [\n                currentCustomer.UserId\n            ];\n            const response = await fetch(\"/api/landlords?table=\".concat(cities[city], \"&values=\").concat(values), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                const landlordsData = JSON.parse(JSON.stringify(data));\n                if (!data.error) {\n                    if (landlordsData.length > 0) {\n                        landlords = [\n                            ...landlords,\n                            ...landlordsData\n                        ];\n                    }\n                } else {\n                    databaseError = true;\n                }\n            } else {\n                serverError = true;\n            }\n        }\n        if (ifInternal) {\n            landlords = landlords.filter((lan)=>{\n                if (lan.note === \"租客要求看房\" || lan.note === \"房源已发客户\" || !lan.note) {\n                    return lan;\n                }\n            });\n            setMatchedLandlords(unique_internal(landlords));\n        } else {\n            const sortLandlord = [\n                ...landlords\n            ].sort((a, b)=>{\n                if (!a.match_level) return -1;\n                if (!b.match_level) return 1;\n                return a.match_level < b.match_level ? -1 : 1;\n            });\n            setNewHouses(unique_external(sortLandlord));\n        }\n        if (databaseError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the database. Please contact the technical team or try agian later.\");\n        } else if (serverError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the server side. Please contact the technical team or try again later.\");\n        }\n    };\n    const handleLandlordUpdate = async (table, updateItems, landlord, listingId)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        var vals = [\n            currentCustomer.UserId\n        ];\n        if (listingId) {\n            vals = [\n                ...vals,\n                listingId\n            ];\n        } else {\n            vals = [\n                ...vals,\n                landlord.listingAdd\n            ];\n        }\n        const reqBody = {\n            listingId: listingId,\n            table: table,\n            values: vals,\n            updateItems: updateItems\n        };\n        const response = await fetch(\"/api/landlords\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reqBody)\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the landlord note\");\n                if (listingId) {\n                    updateExternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                } else {\n                    updateInternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                }\n                return Promise.resolve(\"200\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the database. Error: (\".concat(data.error.code, \"), Please check the input or try again later.\"));\n                return Promise.reject(\"500\");\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const updateInternalLandlord = (landlord)=>{\n        const updatedLandlords = matchedLandlords.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingAdd === landlord.listingAdd) {\n                return landlord;\n            }\n            return lan;\n        });\n        setMatchedLandlords(updatedLandlords);\n    };\n    const updateExternalLandlord = (landlord)=>{\n        const updatedLandlords = newHouses.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingId === landlord.listingId) {\n                return landlord;\n            }\n            return lan;\n        });\n        setNewHouses(updatedLandlords);\n    };\n    const removeMatchedLandlords = async (table)=>{\n        const response = await fetch(\"/api/landlords?table=\".concat(table, \"&customer=\").concat(currentCustomer.UserId), {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                filterCustomers();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully delete the matched landlords\");\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the database. Error: (\".concat(data.error.code, \"), Please check the input or try again later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const filterCustomers = ()=>{\n        const displayCustomers = customers.filter((customer)=>customer.rent_status !== \"YES\");\n        setCustomers(displayCustomers);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Context.Provider, {\n        value: {\n            customers,\n            setCustomers,\n            currentCustomer,\n            setCurrentCustomer,\n            filteredCustomersByID,\n            setFilteredCustomersByID,\n            filteredCustomersByEmail,\n            setFilteredCustomersByEmail,\n            filteredCustomersByWechat,\n            setFilteredCustomersByWechat,\n            matchedLandlords,\n            setMatchedLandlords,\n            newHouses,\n            setNewHouses,\n            handleMatchChange,\n            dayDifference,\n            prioritizing_cutsomer,\n            ifLandlordMatched,\n            handleCustomerUpdate,\n            getMatchedLandlords,\n            handleLandlordUpdate,\n            removeMatchedLandlords,\n            showProfile,\n            setShowProfile,\n            developers,\n            setDevelopers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\c\\\\Desktop\\\\documents\\\\wml\\\\wml-test-main\\\\wml-test-main\\\\context\\\\StateContext.js\",\n        lineNumber: 370,\n        columnNumber: 9\n    }, undefined);\n};\n_s(StateContext, \"58zMJRRLy2pkIefCljOdM0xcpLw=\");\n_c = StateContext;\nconst useStateContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Context);\n};\n_s1(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateContext\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LGdCQUFnQjBDLE1BQU0sR0FBSTtZQUM3RjZCLFFBQVE7WUFDUkMsU0FBUztnQkFDTCxnQkFBZ0I7WUFDcEI7UUFDSjtRQUVBLElBQUlILFNBQVNJLE1BQU0sS0FBSyxLQUFJO1lBQ3hCLE1BQU1ZLE9BQU8sTUFBTWhCLFNBQVNpQixJQUFJO1lBQ2hDLElBQUksQ0FBQ0QsS0FBS1QsS0FBSyxFQUFFO2dCQUNiMkM7Z0JBQ0EvSCwwREFBYSxDQUFDO2dCQUNkO1lBQ0osT0FBTztnQkFDSEEsd0RBQVcsQ0FBQywyREFBMkUsT0FBaEI2RixLQUFLVCxLQUFLLENBQUNZLElBQUksRUFBQztnQkFDdkY7WUFDSixDQUFDO1FBQ0wsQ0FBQztRQUVEaEcsd0RBQVcsQ0FBQyxtRUFBbUYsT0FBaEI2RSxTQUFTSSxNQUFNLEVBQUM7SUFDbkc7SUFFQSxNQUFNOEMsa0JBQWtCLElBQU07UUFDMUIsTUFBTUMsbUJBQW1CMUgsVUFBVTBCLE1BQU0sQ0FBQyxDQUFDQyxXQUFhQSxTQUFTcUQsV0FBVyxLQUFLO1FBQ2pGL0UsYUFBYXlIO0lBQ2pCO0lBR0EscUJBQ0ksOERBQUM3SCxRQUFROEgsUUFBUTtRQUFDdEIsT0FBTztZQUNyQnJHO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0FDO1lBQ0F5RDtZQUNBcEQ7WUFDQU07WUFDQXFCO1lBQ0FvQztZQUNBVTtZQUNBbUI7WUFDQVU7WUFDQTFHO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0o7a0JBRUtsQjs7Ozs7O0FBR2IsRUFBRTtHQTNZV0Q7S0FBQUE7QUE2WU4sTUFBTThILGtCQUFrQixJQUFNcEk7O0lBQUFBLE9BQUFBLGlEQUFVQSxDQUFDSztBQUFPLEVBQUU7SUFBNUMrSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb250ZXh0L1N0YXRlQ29udGV4dC5qcz9iMWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgeyB0aW1lem9uZUZvcm1hdHRlcn0gZnJvbSAnLi4vbGliL3RpbWV6b25lX3V0aWxzJztcbmNvbnN0IENvbnRleHQgPSBjcmVhdGVDb250ZXh0KCk7XG5cbmV4cG9ydCBjb25zdCBTdGF0ZUNvbnRleHQgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gICAgLy8gY3VzdG9tZXJzXG4gICAgY29uc3QgW2N1c3RvbWVycywgc2V0Q3VzdG9tZXJzXSA9IHVzZVN0YXRlKFtdKVxuICAgIGNvbnN0IFtjdXJyZW50Q3VzdG9tZXIsIHNldEN1cnJlbnRDdXN0b21lcl0gPSB1c2VTdGF0ZSgpXG4gICAgY29uc3QgW2ZpbHRlcmVkQ3VzdG9tZXJzQnlJRCwgc2V0RmlsdGVyZWRDdXN0b21lcnNCeUlEXSA9IHVzZVN0YXRlKFtdKVxuICAgIGNvbnN0IFtmaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWwsIHNldEZpbHRlcmVkQ3VzdG9tZXJzQnlFbWFpbF0gPSB1c2VTdGF0ZShbXSlcbiAgICBjb25zdCBbZmlsdGVyZWRDdXN0b21lcnNCeVdlY2hhdCwgc2V0RmlsdGVyZWRDdXN0b21lcnNCeVdlY2hhdF0gPSB1c2VTdGF0ZShbXSlcbiAgICAvLyBpbnRlcm5hbCBsYW5kbG9yZHNcbiAgICBjb25zdCBbbWF0Y2hlZExhbmRsb3Jkcywgc2V0TWF0Y2hlZExhbmRsb3Jkc10gPSB1c2VTdGF0ZShbXSlcbiAgICAvLyBleHRlcm5hbCBsYW5kbG9yZHNcbiAgICBjb25zdCBbbmV3SG91c2VzLCBzZXROZXdIb3VzZXNdID0gdXNlU3RhdGUoW10pXG5cbiAgICBjb25zdCBbc2hvd1Byb2ZpbGUsIHNldFNob3dQcm9maWxlXSA9IHVzZVN0YXRlKGZhbHNlKVxuICAgIGNvbnN0IFtkZXZlbG9wZXJzLCBzZXREZXZlbG9wZXJzXSA9IHVzZVN0YXRlKFtdKVxuXG4gICAgY29uc3QgZGF5RGlmZmVyZW5jZSA9IChkYXRlMSwgZGF0ZTIpID0+IHtcbiAgICAgICAgdmFyIGRpZmZlcmVuY2VJblRpbWUgPSAgZGF0ZTIuZ2V0VGltZSgpIC0gZGF0ZTEuZ2V0VGltZSgpO1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIFRvIGNhbGN1bGF0ZSB0aGUgbm8uIG9mIGRheXMgYmV0d2VlbiB0d28gZGF0ZXNcbiAgICAgICAgdmFyIGRpZmZlcmVuY2VJbkRheXMgPSBkaWZmZXJlbmNlSW5UaW1lIC8gKDEwMDAgKiAzNjAwICogMjQpO1xuICAgICAgICByZXR1cm4gZGlmZmVyZW5jZUluRGF5c1xuICAgIH1cblxuICAgIGNvbnN0IHByaW9yaXRpemluZ19jdXRzb21lciA9IChjdXN0b21lcnMpID0+IHtcbiAgICAgICAgLy/otbfnp5/ml6XmsqHov4fnmoQg5LyY5YWI57qn5pu06auYIOemu+i1t+enn+aXpei2iui/kSDkvJjlhYjnuqfmm7Tpq5hcbiAgICAgICAgLy/otbfnp5/ml6Xov4fkuobnmoQg56a76LW356ef5pel6LaK6L+RIOS8mOWFiOe6p+i2iumrmFxuICAgICAgICAvL+i1t+enn+aXpeayoeaciei/h+eahOS8mOWFiOe6p+i2hei/h+i1t+enn+aXpeW3sue7j+i/h+S6hueahFxuXG4gICBjb25zdCBjX3JlbnRfZGF0ZV9ub3RfcGFzcz0gY3VzdG9tZXJzLmZpbHRlcigoY3VzdG9tZXIpID0+IHtcbiAgICAgICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpXG4gICAgICAgIGNvbnN0IHJlbnRfZGF5ID0gbmV3IERhdGUoY3VzdG9tZXIucmVudF9kYXRlKVxuXG4gICAgICAgIGlmIChkYXlEaWZmZXJlbmNlKHRvZGF5LHJlbnRfZGF5KT49MCl7XG4gICAgICAgICAgICByZXR1cm4gY3VzdG9tZXJcbiAgICAgICAgfVxuICAgfSlcbiAgICBjb25zb2xlLmxvZyhjX3JlbnRfZGF0ZV9ub3RfcGFzcylcbiAgIGNfcmVudF9kYXRlX25vdF9wYXNzLnNvcnQoZnVuY3Rpb24oYSxiKXtcbiAgICByZXR1cm4gbmV3IERhdGUoYS5yZW50X2RhdGUpIC0gbmV3IERhdGUoYi5yZW50X2RhdGUpXG4gICB9KVxuICAgIFxuICAgY29uc3QgY19yZW50X2RhdGVfcGFzc2VkPSBjdXN0b21lcnMuZmlsdGVyKChjdXN0b21lcikgPT4ge1xuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKVxuICAgIGNvbnN0IHJlbnRfZGF5ID0gbmV3IERhdGUoY3VzdG9tZXIucmVudF9kYXRlKVxuXG4gICAgICAgIGlmIChkYXlEaWZmZXJlbmNlKHRvZGF5LHJlbnRfZGF5KSA8MCApe1xuICAgICAgICAgICAgcmV0dXJuIGN1c3RvbWVyXG4gICAgICAgIH1cbiAgfSlcbiAgICBjb25zb2xlLmxvZyhjX3JlbnRfZGF0ZV9wYXNzZWQpXG4gICAgXG4gIGNfcmVudF9kYXRlX3Bhc3NlZC5zb3J0KGZ1bmN0aW9uKGEsYil7XG4gICAgcmV0dXJuIG5ldyBEYXRlKGIucmVudF9kYXRlKSAtIG5ldyBEYXRlKGEucmVudF9kYXRlKVxuICB9KVxuICAgIFxuICAgIGNvbnN0IGN1c3RvbWVyTGlzdCA9IGNfcmVudF9kYXRlX25vdF9wYXNzLmNvbmNhdChjX3JlbnRfZGF0ZV9wYXNzZWQpXG4gICAgcmV0dXJuIGN1c3RvbWVyTGlzdFxufVxuICAgIFxuICAgIGNvbnN0IHVwZGF0ZUN1cnJlbnRDdXN0b21lciA9IChjdXN0b21lcikgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkQ3VzdG9tZXIgPSBjdXN0b21lcnMubWFwKChjdXMpID0+IHtcbiAgICAgICAgICAgIGlmIChjdXMuVXNlcklkID09PSBjdXN0b21lci5Vc2VySWQpIHtcbiAgICAgICAgICAgICAgICBzZXRDdXJyZW50Q3VzdG9tZXIoY3VzdG9tZXIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIGN1c3RvbWVyXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3VzXG4gICAgICAgIH0pXG4gICAgICAgIHNldEN1c3RvbWVycyh1cGRhdGVkQ3VzdG9tZXIpXG4gICAgfVxuXG4gICAgY29uc3QgaWZMYW5kbG9yZE1hdGNoZWQgPSAobGFuZGxvcmRJdGVtKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpbExpc3QgPSAgbWF0Y2hlZExhbmRsb3Jkcy5maWx0ZXIoKGxhbmRsb3JkKSA9PiB7XG4gICAgICAgICAgICBpZiAobGFuZGxvcmQubGlzdGluZ0FkZCA9PT0gbGFuZGxvcmRJdGVtLmxpc3RpbmdBZGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbGFuZGxvcmRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGZpbExpc3QubGVuZ3RoID4gMFxuICAgIH1cblxuICAgIGNvbnN0IHZhbGlkYXRlQ2FuYWRpYW5Qb3N0YWxDb2RlID0gKHBvc3RhbENvZGUpID0+IHsgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBwb3N0YWxDb2RlUmVnZXggPSBuZXcgUmVnRXhwKC9eKD86W0EtWl1cXGRbQS1aXVsgLV0/XFxkW0EtWl1cXGQpJC9pKTtcbiAgICAgICBcbiAgICAgICAgcmV0dXJuIHBvc3RhbENvZGVSZWdleC50ZXN0KHBvc3RhbENvZGUpXG4gICAgfVxuXG4gICAgY29uc3QgdmFsaWRhdGVTdGFydFRpbWUgPSAoc3RhcnRUaW1lKSA9PiB7ICAgIFxuICAgICAgICBcbiAgICAgICAgY29uc3Qgc3RhcnRUaW1lUmVnZXggPSBuZXcgUmVnRXhwKC9eXFxkezR9LSgwWzEtOV18MVswLTJdKS0oMFsxLTldfFsxMl1cXGR8M1swMV0pJC9pKTtcbiAgICAgICBcbiAgICAgICAgcmV0dXJuIHN0YXJ0VGltZVJlZ2V4LnRlc3Qoc3RhcnRUaW1lKVxuICAgIH1cblxuICAgIGNvbnN0IHZhbGlkYXRlRW1haWwgPSAoZW1haWwpID0+IHsgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBlbWFpbFJlZ2V4ID0gbmV3IFJlZ0V4cCgvXlthLXowLTkuXy1dezEsNjR9QFthLXowLTkuXXsxLDY0fSQvaSk7XG4gICAgICAgXG4gICAgICAgIHJldHVybiBlbWFpbFJlZ2V4LnRlc3QoZW1haWwpXG4gICAgfVxuXG4gIFxuICAgIGNvbnN0IHVuaXF1ZV9pbnRlcm5hbCA9IChhcnIpID0+IHtcbiAgICAgICAgcmV0dXJuIGFyci5maWx0ZXIoKHYsaSxhKT0+YS5maW5kSW5kZXgodjI9Pih2Mi5saXN0aW5nQWRkPT09di5saXN0aW5nQWRkKSk9PT1pKVxuICAgIH07XG5cbiAgICBjb25zdCB1bmlxdWVfZXh0ZXJuYWwgPSAoYXJyKSA9PiB7XG4gICAgICAgIHJldHVybiBhcnIuZmlsdGVyKCh2LGksYSk9PmEuZmluZEluZGV4KHYyPT4odjIubGlzdGluZ1VybD09PXYubGlzdGluZ1VybCkpPT09aSlcbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlTWF0Y2hDaGFuZ2UgPSBhc3luYyAoY3VzdG9tZXIpID0+IHsgXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vMTE5LjMuMjQxLjMzOjMwMDAvY3VzdG9tZXJzLyR7Y3VzdG9tZXIuVXNlcklkfWAsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCI6IFwiKlwiLFxuICAgICAgICAgICAgICAgICAgICBcIkF1dGhvcml6YXRpb25cIjogXCJCZWFyZXIgeXZtRnAvSjh2T3M3UUxjczFmY1Zwb3owQ2hEZm9aWjVrSS9sMUpkeVIwcGJFeWc3QjlYSXZpT0habXpEVi95L0hUd0RmR1VOdDUrVm5ZMFBcIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UpXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICB0b2FzdC5zdWNjZXNzKCdNYXRjaGluZyBpcyBub3cgcHJvY2Vzc2luZy4nKVxuXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VfZXh0ZW5hbCA9IGF3YWl0IGZldGNoKGBodHRwOi8vMTE5LjMuMjQxLjMzOjMwMDAvZXh0ZXJuYWwvJHtjdXN0b21lci5Vc2VySWR9YCwge1xuICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXCI6IFwiKlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJBdXRob3JpemF0aW9uXCI6IFwiQmVhcmVyIHl2bUZwL0o4dk9zN1FMY3MxZmNWcG96MENoRGZvWlo1a0kvbDFKZHlSMHBiRXlnN0I5WEl2aU9IWm16RFYveS9IVHdEZkdVTnQ1K1ZuWTBQXCJcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlX2V4dGVuYWwpXG4gICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlX2V4dGVuYWwuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdG9hc3Quc3VjY2VzcygnRXh0ZXJuYWwgTWF0Y2hpbmcgc3VjY2VlZGVkLicpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdG9hc3QuZXJyb3IoJ0V4dGVybmFsIE1hdGNoaW5nIGVycm9yLicpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VfaW50ZXJuYWwgPSBhd2FpdCBmZXRjaChgaHR0cDovLzExOS4zLjI0MS4zMzozMDAwL2ludGVybmFsLyR7Y3VzdG9tZXIuVXNlcklkfWAsIHtcbiAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIkFjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpblwiOiBcIipcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQXV0aG9yaXphdGlvblwiOiBcIkJlYXJlciB5dm1GcC9KOHZPczdRTGNzMWZjVnBvejBDaERmb1paNWtJL2wxSmR5UjBwYkV5ZzdCOVhJdmlPSFptekRWL3kvSFR3RGZHVU50NStWblkwUFwiXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZV9pbnRlcm5hbClcbiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2VfaW50ZXJuYWwuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdG9hc3Quc3VjY2VzcygnSW50ZXJuYWwgTWF0Y2hpbmcgc3VjY2VlZGVkLicpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdG9hc3QuZXJyb3IoJ0ludGVybmFsIE1hdGNoaW5nIGVycm9yLicpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChjdXN0b21lci5yZW50X3N0YXR1cyA9PT0gJ1lFUycgfHwgY3VzdG9tZXIucmVudF9zdGF0dXMgPT09ICdERUxFVEVEJyB8fCBjdXN0b21lci5yZW50X3N0YXR1cyA9PT0gJ+eci+aIv+WuouaItycpXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoJ0l0IGlzICcpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2FzdC5lcnJvcignTWF0Y2hpbmcgZXJyb3IuJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlQ3VzdG9tZXJVcGRhdGUgPSBhc3luYyAodXBkYXRlSXRlbXMsIGN1c3RvbWVyKSA9PiB7XG4gICAgICAgIGlmICh1cGRhdGVJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG4gICAgXG4gICAgICAgIGlmICghdmFsaWRhdGVDYW5hZGlhblBvc3RhbENvZGUoY3VzdG9tZXJbXCLor7floavlhpnmgqjnmoTnm67nmoTlnLDpgq7nvJbvvIzmm7Tlpb3ojrflvpfpmYTov5Hpgrvph4znmoTluK7liqlcIl0pKSB7XG4gICAgICAgICAgICB0b2FzdC5lcnJvcihgUGxlYXNlIGVudGVyIGEgdmFsaWQgcG9zdGFsIGNvZGUgQTFBIDFBMS5gKVxuICAgICAgICAgICAgXG4gICAgICAgIH0gZWxzZSBpZiAoIXZhbGlkYXRlU3RhcnRUaW1lKGN1c3RvbWVyW1wicmVudF9kYXRlXCJdKSkge1xuICAgICAgICAgICAgdG9hc3QuZXJyb3IoYFBsZWFzZSBlbnRlciBhIHZhbGlkIHN0YXJ0IHRpbWUgeXl5eS1tbS1kZC5gKVxuXG4gICAgICAgIH0gZWxzZSBpZiAoIXZhbGlkYXRlRW1haWwoY3VzdG9tZXJbXCJtYWlsXCJdKSkge1xuICAgICAgICAgICAgdG9hc3QuZXJyb3IoYFBsZWFzZSBlbnRlciBhIHZhbGlkIEVtYWlsLiB4eHhAeC54YClcblxuXG4gICAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvY3VzdG9tZXJzLyR7Y3VzdG9tZXIuVXNlcklkfWAsIHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgdmFsczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4udXBkYXRlSXRlbXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAnTGFzdFVwZGF0ZVRpbWUnOiB0aW1lem9uZUZvcm1hdHRlciggZGF5anMobmV3IERhdGUoKSkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgICAgICAgICAgIGlmICghZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB0b2FzdC5zdWNjZXNzKCdTdWNjZXNzZnVsbHkgdXBkYXRlZCB0aGUgY3VzdG9tZXIgaW5mb3JtYXRpb24nKVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdfY3VzdG9tZXIgPSB7IC4uLmN1c3RvbWVyLCAnTGFzdFVwZGF0ZVRpbWUnOiAgdGltZXpvbmVGb3JtYXR0ZXIoZGF5anMobmV3IERhdGUoKSkpfVxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVDdXJyZW50Q3VzdG9tZXIobmV3X2N1c3RvbWVyKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSB0aGUgY3VzdG9tZXIgaW5mb3JtYXRpb24gdG8gdGhlIGRhdGFiYXNlLiBFcnJvcjogKCR7ZGF0YS5lcnJvci5jb2RlfSksIFBsZWFzZSBjaGVjayB0aGUgaW5wdXQgb3IgdHJ5IGFnYWluIGxhdGVyLmApXG4gICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRvYXN0LmVycm9yKGBGYWlsZWQgdG8gdXBkYXRlIHRoZSBjdXN0b21lciBpbmZvcm1hdGlvbiB0byB0aGUgc2VydmVyIHNpZGUuIEVycm9yIGNvZGU6ICgke3Jlc3BvbnNlLnN0YXR1c30pLCBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLmApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXRNYXRjaGVkTGFuZGxvcmRzID0gYXN5bmMgKHRhYmxlcywgaWZJbnRlcm5hbCkgPT4ge1xuICAgICAgICBsZXQgZGF0YWJhc2VFcnJvciA9IGZhbHNlXG4gICAgICAgIGxldCBzZXJ2ZXJFcnJvciA9IGZhbHNlXG4gICAgICAgIGxldCBsYW5kbG9yZHMgPSBbXVxuICAgICAgICBjb25zdCBjaXRpZXMgPSBPYmplY3QuZW50cmllcyh0YWJsZXMpLm1hcCgoW2tleSwgdmFsdWVdKT0+e1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlXG4gICAgICAgIH0pXG5cbiAgICAgICAgZm9yIChjb25zdCBjaXR5IGluIGNpdGllcykge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gWyBjdXJyZW50Q3VzdG9tZXIuVXNlcklkIF1cbiAgICBcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbGFuZGxvcmRzP3RhYmxlPSR7Y2l0aWVzW2NpdHldfSZ2YWx1ZXM9JHt2YWx1ZXN9YCwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgXG4gICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApe1xuICAgICAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICAgICAgICBjb25zdCBsYW5kbG9yZHNEYXRhID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShkYXRhKSlcbiAgICAgICAgICAgICAgICBpZiAoIWRhdGEuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGxhbmRsb3Jkc0RhdGEubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGFuZGxvcmRzID0gWy4uLmxhbmRsb3JkcywgLi4ubGFuZGxvcmRzRGF0YV1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGRhdGFiYXNlRXJyb3IgPSB0cnVlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXJ2ZXJFcnJvciA9IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKGlmSW50ZXJuYWwpIHtcbiAgICAgICAgICAgIGxhbmRsb3JkcyA9IGxhbmRsb3Jkcy5maWx0ZXIoKGxhbikgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChsYW4ubm90ZSA9PT0gJ+enn+Wuouimgeaxgueci+aIvycgfHxsYW4ubm90ZSA9PT0gJ+aIv+a6kOW3suWPkeWuouaItycgfHwgIWxhbi5ub3RlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBsYW5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0TWF0Y2hlZExhbmRsb3Jkcyh1bmlxdWVfaW50ZXJuYWwobGFuZGxvcmRzKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNvcnRMYW5kbG9yZCA9IFsuLi5sYW5kbG9yZHNdLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICBpZighYS5tYXRjaF9sZXZlbCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIGlmKCFiLm1hdGNoX2xldmVsKSByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5tYXRjaF9sZXZlbCA8IGIubWF0Y2hfbGV2ZWwgPyAtMSA6IDE7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNldE5ld0hvdXNlcyh1bmlxdWVfZXh0ZXJuYWwoc29ydExhbmRsb3JkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkYXRhYmFzZUVycm9yKSB7XG4gICAgICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIGZldGNoIHRoZSBtYXRjaGVkIGxhbmRsb3JkcyBmcm9tIHRoZSBkYXRhYmFzZS4gUGxlYXNlIGNvbnRhY3QgdGhlIHRlY2huaWNhbCB0ZWFtIG9yIHRyeSBhZ2lhbiBsYXRlci5gKVxuICAgICAgICB9IGVsc2UgaWYgKHNlcnZlckVycm9yKSB7XG4gICAgICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIGZldGNoIHRoZSBtYXRjaGVkIGxhbmRsb3JkcyBmcm9tIHRoZSBzZXJ2ZXIgc2lkZS4gUGxlYXNlIGNvbnRhY3QgdGhlIHRlY2huaWNhbCB0ZWFtIG9yIHRyeSBhZ2FpbiBsYXRlci5gKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlTGFuZGxvcmRVcGRhdGUgPSBhc3luYyh0YWJsZSwgdXBkYXRlSXRlbXMsIGxhbmRsb3JkLCBsaXN0aW5nSWQpID0+IHtcbiAgICAgICAgaWYgKHVwZGF0ZUl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuICAgICAgICB2YXIgdmFscyA9IFtjdXJyZW50Q3VzdG9tZXIuVXNlcklkXVxuXG4gICAgICAgIGlmIChsaXN0aW5nSWQpIHtcbiAgICAgICAgICAgIHZhbHMgPSBbLi4udmFscywgbGlzdGluZ0lkXVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFscyA9IFsuLi52YWxzLCBsYW5kbG9yZC5saXN0aW5nQWRkXVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmVxQm9keSA9IHtcbiAgICAgICAgICAgIGxpc3RpbmdJZDogbGlzdGluZ0lkLFxuICAgICAgICAgICAgdGFibGU6IHRhYmxlLFxuICAgICAgICAgICAgdmFsdWVzOiB2YWxzLFxuICAgICAgICAgICAgdXBkYXRlSXRlbXM6IHVwZGF0ZUl0ZW1zXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCIvYXBpL2xhbmRsb3Jkc1wiLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkocmVxQm9keSlcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApe1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgICAgICAgaWYgKCFkYXRhLmVycm9yKSB7XG4gICAgICAgICAgICAgICAgdG9hc3Quc3VjY2VzcygnU3VjY2Vzc2Z1bGx5IHVwZGF0ZWQgdGhlIGxhbmRsb3JkIG5vdGUnKVxuICAgICAgICAgICAgICAgIGlmIChsaXN0aW5nSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlRXh0ZXJuYWxMYW5kbG9yZCh7Li4ubGFuZGxvcmQsIC4uLnVwZGF0ZUl0ZW1zfSlcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVJbnRlcm5hbExhbmRsb3JkKHsuLi5sYW5kbG9yZCwgLi4udXBkYXRlSXRlbXN9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCcyMDAnKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSB0aGUgbGFuZGxvcmQgbm90ZSB0byB0aGUgZGF0YWJhc2UuIEVycm9yOiAoJHtkYXRhLmVycm9yLmNvZGV9KSwgUGxlYXNlIGNoZWNrIHRoZSBpbnB1dCBvciB0cnkgYWdhaW4gbGF0ZXIuYClcbiAgICAgICAgICAgICAgICByZXR1cm4gIFByb21pc2UucmVqZWN0KCc1MDAnKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSB0aGUgbGFuZGxvcmQgbm90ZSB0byB0aGUgc2VydmVyIHNpZGUuIEVycm9yIGNvZGU6ICgke3Jlc3BvbnNlLnN0YXR1c30pLCBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLmApXG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlSW50ZXJuYWxMYW5kbG9yZCA9IChsYW5kbG9yZCkgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkTGFuZGxvcmRzID0gbWF0Y2hlZExhbmRsb3Jkcy5tYXAoKGxhbikgPT4ge1xuICAgICAgICAgICAgaWYgKGxhbi5Vc2VySWQgPT09IGxhbmRsb3JkLlVzZXJJZCAmJiBsYW4ubGlzdGluZ0FkZCA9PT0gbGFuZGxvcmQubGlzdGluZ0FkZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsYW5kbG9yZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGxhblxuICAgICAgICB9KVxuICAgICAgICBcbiAgICAgICAgc2V0TWF0Y2hlZExhbmRsb3Jkcyh1cGRhdGVkTGFuZGxvcmRzKVxuICAgIH1cbiAgICBcbiAgICBjb25zdCB1cGRhdGVFeHRlcm5hbExhbmRsb3JkID0gKGxhbmRsb3JkKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRMYW5kbG9yZHMgPSBuZXdIb3VzZXMubWFwKChsYW4pID0+IHtcbiAgICAgICAgICAgIGlmIChsYW4uVXNlcklkID09PSBsYW5kbG9yZC5Vc2VySWQgJiYgbGFuLmxpc3RpbmdJZCA9PT0gbGFuZGxvcmQubGlzdGluZ0lkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhbmRsb3JkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbGFuXG4gICAgICAgIH0pXG4gICAgICAgIHNldE5ld0hvdXNlcyh1cGRhdGVkTGFuZGxvcmRzKVxuICAgIH1cblxuICAgIGNvbnN0IHJlbW92ZU1hdGNoZWRMYW5kbG9yZHMgPSBhc3luYyh0YWJsZSkgPT4ge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvYXBpL2xhbmRsb3Jkcz90YWJsZT0ke3RhYmxlfSZjdXN0b21lcj0ke2N1cnJlbnRDdXN0b21lci5Vc2VySWR9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgXG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCl7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXG4gICAgICAgICAgICBpZiAoIWRhdGEuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBmaWx0ZXJDdXN0b21lcnMoKVxuICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1N1Y2Nlc3NmdWxseSBkZWxldGUgdGhlIG1hdGNoZWQgbGFuZGxvcmRzJylcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdG9hc3QuZXJyb3IoYEZhaWxlZCB0byBkZWxldGUgdGhlIGxhbmRsb3JkcyBvbiB0aGUgZGF0YWJhc2UuIEVycm9yOiAoJHtkYXRhLmVycm9yLmNvZGV9KSwgUGxlYXNlIGNoZWNrIHRoZSBpbnB1dCBvciB0cnkgYWdhaW4gbGF0ZXIuYClcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdG9hc3QuZXJyb3IoYEZhaWxlZCB0byBkZWxldGUgdGhlIGxhbmRsb3JkcyBvbiB0aGUgc2VydmVyIHNpZGUuIEVycm9yIGNvZGU6ICgke3Jlc3BvbnNlLnN0YXR1c30pLCBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLmApXG4gICAgfVxuXG4gICAgY29uc3QgZmlsdGVyQ3VzdG9tZXJzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwbGF5Q3VzdG9tZXJzID0gY3VzdG9tZXJzLmZpbHRlcigoY3VzdG9tZXIpID0+IGN1c3RvbWVyLnJlbnRfc3RhdHVzICE9PSBcIllFU1wiKVxuICAgICAgICBzZXRDdXN0b21lcnMoZGlzcGxheUN1c3RvbWVycylcbiAgICB9XG5cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7XG4gICAgICAgICAgICBjdXN0b21lcnMsXG4gICAgICAgICAgICBzZXRDdXN0b21lcnMsXG4gICAgICAgICAgICBjdXJyZW50Q3VzdG9tZXIsXG4gICAgICAgICAgICBzZXRDdXJyZW50Q3VzdG9tZXIsXG4gICAgICAgICAgICBmaWx0ZXJlZEN1c3RvbWVyc0J5SUQsXG4gICAgICAgICAgICBzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5SUQsXG4gICAgICAgICAgICBmaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWwsXG4gICAgICAgICAgICBzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWwsXG4gICAgICAgICAgICBmaWx0ZXJlZEN1c3RvbWVyc0J5V2VjaGF0LFxuICAgICAgICAgICAgc2V0RmlsdGVyZWRDdXN0b21lcnNCeVdlY2hhdCxcbiAgICAgICAgICAgIG1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBzZXRNYXRjaGVkTGFuZGxvcmRzLFxuICAgICAgICAgICAgbmV3SG91c2VzLFxuICAgICAgICAgICAgc2V0TmV3SG91c2VzLFxuICAgICAgICAgICAgaGFuZGxlTWF0Y2hDaGFuZ2UsXG4gICAgICAgICAgICBkYXlEaWZmZXJlbmNlLFxuICAgICAgICAgICAgcHJpb3JpdGl6aW5nX2N1dHNvbWVyLFxuICAgICAgICAgICAgaWZMYW5kbG9yZE1hdGNoZWQsXG4gICAgICAgICAgICBoYW5kbGVDdXN0b21lclVwZGF0ZSxcbiAgICAgICAgICAgIGdldE1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBoYW5kbGVMYW5kbG9yZFVwZGF0ZSxcbiAgICAgICAgICAgIHJlbW92ZU1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBzaG93UHJvZmlsZSxcbiAgICAgICAgICAgIHNldFNob3dQcm9maWxlLFxuICAgICAgICAgICAgZGV2ZWxvcGVycyxcbiAgICAgICAgICAgIHNldERldmVsb3BlcnNcbiAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0NvbnRleHQuUHJvdmlkZXI+XG4gICAgKVxufTtcblxuZXhwb3J0IGNvbnN0IHVzZVN0YXRlQ29udGV4dCA9ICgpID0+IHVzZUNvbnRleHQoQ29udGV4dCk7XG5cbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ0b2FzdCIsImRheWpzIiwidGltZXpvbmVGb3JtYXR0ZXIiLCJDb250ZXh0IiwiU3RhdGVDb250ZXh0IiwiY2hpbGRyZW4iLCJjdXN0b21lcnMiLCJzZXRDdXN0b21lcnMiLCJjdXJyZW50Q3VzdG9tZXIiLCJzZXRDdXJyZW50Q3VzdG9tZXIiLCJmaWx0ZXJlZEN1c3RvbWVyc0J5SUQiLCJzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5SUQiLCJmaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWwiLCJzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWwiLCJmaWx0ZXJlZEN1c3RvbWVyc0J5V2VjaGF0Iiwic2V0RmlsdGVyZWRDdXN0b21lcnNCeVdlY2hhdCIsIm1hdGNoZWRMYW5kbG9yZHMiLCJzZXRNYXRjaGVkTGFuZGxvcmRzIiwibmV3SG91c2VzIiwic2V0TmV3SG91c2VzIiwic2hvd1Byb2ZpbGUiLCJzZXRTaG93UHJvZmlsZSIsImRldmVsb3BlcnMiLCJzZXREZXZlbG9wZXJzIiwiZGF5RGlmZmVyZW5jZSIsImRhdGUxIiwiZGF0ZTIiLCJkaWZmZXJlbmNlSW5UaW1lIiwiZ2V0VGltZSIsImRpZmZlcmVuY2VJbkRheXMiLCJwcmlvcml0aXppbmdfY3V0c29tZXIiLCJjX3JlbnRfZGF0ZV9ub3RfcGFzcyIsImZpbHRlciIsImN1c3RvbWVyIiwidG9kYXkiLCJEYXRlIiwicmVudF9kYXkiLCJyZW50X2RhdGUiLCJjb25zb2xlIiwibG9nIiwic29ydCIsImEiLCJiIiwiY19yZW50X2RhdGVfcGFzc2VkIiwiY3VzdG9tZXJMaXN0IiwiY29uY2F0IiwidXBkYXRlQ3VycmVudEN1c3RvbWVyIiwidXBkYXRlZEN1c3RvbWVyIiwibWFwIiwiY3VzIiwiVXNlcklkIiwiaWZMYW5kbG9yZE1hdGNoZWQiLCJsYW5kbG9yZEl0ZW0iLCJmaWxMaXN0IiwibGFuZGxvcmQiLCJsaXN0aW5nQWRkIiwibGVuZ3RoIiwidmFsaWRhdGVDYW5hZGlhblBvc3RhbENvZGUiLCJwb3N0YWxDb2RlIiwicG9zdGFsQ29kZVJlZ2V4IiwiUmVnRXhwIiwidGVzdCIsInZhbGlkYXRlU3RhcnRUaW1lIiwic3RhcnRUaW1lIiwic3RhcnRUaW1lUmVnZXgiLCJ2YWxpZGF0ZUVtYWlsIiwiZW1haWwiLCJlbWFpbFJlZ2V4IiwidW5pcXVlX2ludGVybmFsIiwiYXJyIiwidiIsImkiLCJmaW5kSW5kZXgiLCJ2MiIsInVuaXF1ZV9leHRlcm5hbCIsImxpc3RpbmdVcmwiLCJoYW5kbGVNYXRjaENoYW5nZSIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwic3RhdHVzIiwic3VjY2VzcyIsInJlc3BvbnNlX2V4dGVuYWwiLCJlcnJvciIsInJlc3BvbnNlX2ludGVybmFsIiwicmVudF9zdGF0dXMiLCJoYW5kbGVDdXN0b21lclVwZGF0ZSIsInVwZGF0ZUl0ZW1zIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ2YWxzIiwiZGF0YSIsImpzb24iLCJuZXdfY3VzdG9tZXIiLCJjb2RlIiwiZ2V0TWF0Y2hlZExhbmRsb3JkcyIsInRhYmxlcyIsImlmSW50ZXJuYWwiLCJkYXRhYmFzZUVycm9yIiwic2VydmVyRXJyb3IiLCJsYW5kbG9yZHMiLCJjaXRpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwia2V5IiwidmFsdWUiLCJjaXR5IiwidmFsdWVzIiwibGFuZGxvcmRzRGF0YSIsInBhcnNlIiwibGFuIiwibm90ZSIsInNvcnRMYW5kbG9yZCIsIm1hdGNoX2xldmVsIiwiaGFuZGxlTGFuZGxvcmRVcGRhdGUiLCJ0YWJsZSIsImxpc3RpbmdJZCIsInJlcUJvZHkiLCJ1cGRhdGVFeHRlcm5hbExhbmRsb3JkIiwidXBkYXRlSW50ZXJuYWxMYW5kbG9yZCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidXBkYXRlZExhbmRsb3JkcyIsInJlbW92ZU1hdGNoZWRMYW5kbG9yZHMiLCJmaWx0ZXJDdXN0b21lcnMiLCJkaXNwbGF5Q3VzdG9tZXJzIiwiUHJvdmlkZXIiLCJ1c2VTdGF0ZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context/StateContext.js\n"));

/***/ })

});