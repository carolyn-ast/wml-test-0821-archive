"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/StateContext.js":
/*!*********************************!*\
  !*** ./context/StateContext.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StateContext\": function() { return /* binding */ StateContext; },\n/* harmony export */   \"useStateContext\": function() { return /* binding */ useStateContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_3__);\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst Context = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst StateContext = (param)=>{\n    let { children  } = param;\n    _s();\n    // customers\n    const [customers, setCustomers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentCustomer, setCurrentCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [filteredCustomersByID, setFilteredCustomersByID] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByEmail, setFilteredCustomersByEmail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByWechat, setFilteredCustomersByWechat] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // internal landlords\n    const [matchedLandlords, setMatchedLandlords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // external landlords\n    const [newHouses, setNewHouses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showProfile, setShowProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [developers, setDevelopers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const dayDifference = (date1, date2)=>{\n        var differenceInTime = date2.getTime() - date1.getTime();\n        // To calculate the no. of days between two dates\n        var differenceInDays = differenceInTime / (1000 * 3600 * 24);\n        return differenceInDays;\n    };\n    const updateCurrentCustomer = (customer)=>{\n        const updatedCustomer = customers.map((cus)=>{\n            if (cus.UserId === customer.UserId) {\n                setCurrentCustomer(customer);\n                return customer;\n            }\n            return cus;\n        });\n        setCustomers(updatedCustomer);\n    };\n    const ifLandlordMatched = (landlordItem)=>{\n        const filList = matchedLandlords.filter((landlord)=>{\n            if (landlord.listingAdd === landlordItem.listingAdd) {\n                return landlord;\n            }\n        });\n        return filList.length > 0;\n    };\n    const validateCanadianPostalCode = (postalCode)=>{\n        const postalCodeRegex = new RegExp(/^(?:[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d)$/i);\n        return postalCodeRegex.test(postalCode);\n    };\n    const validateStartTime = (startTime)=>{\n        const startTimeRegex = new RegExp(/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/i);\n        return startTimeRegex.test(startTime);\n    };\n    const handleCustomerUpdate = async (updateItems, customer)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        if (!validateCanadianPostalCode(customer[\"请填写您的目的地邮编，更好获得附近邻里的帮助\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid postal code.\");\n            return;\n        }\n        if (!validateCanadianPostalCodevalidateStartTime(customer[\"请填写您的目的地邮编，更好获得附近邻里的帮助\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid postal code.\");\n            return;\n        }\n        const response = await fetch(\"/api/customers/\".concat(customer.UserId), {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                vals: {\n                    ...updateItems,\n                    \"Last Update Date\": dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n                }\n            })\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the customer information\");\n                const new_customer = {\n                    ...customer,\n                    \"Last Update Date\": dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n                };\n                updateCurrentCustomer(new_customer);\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const getMatchedLandlords = async (tables, ifInternal)=>{\n        let databaseError = false;\n        let serverError = false;\n        let landlords = [];\n        const cities = Object.entries(tables).map((param)=>{\n            let [key, value] = param;\n            return value;\n        });\n        for(const city in cities){\n            const values = [\n                currentCustomer.UserId\n            ];\n            const response = await fetch(\"/api/landlords?table=\".concat(cities[city], \"&values=\").concat(values), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                const landlordsData = JSON.parse(JSON.stringify(data));\n                if (!data.error) {\n                    if (landlordsData.length > 0) {\n                        landlords = [\n                            ...landlords,\n                            ...landlordsData\n                        ];\n                    }\n                } else {\n                    databaseError = true;\n                }\n            } else {\n                serverError = true;\n            }\n        }\n        if (ifInternal) {\n            const sortLandlord = [\n                ...landlords\n            ].sort((a, b)=>{\n                if (!a.note) return -1;\n                if (!b.note) return 1;\n                return a.note < b.note ? -1 : 1;\n            });\n            setMatchedLandlords(sortLandlord);\n        } else {\n            const sortLandlord = [\n                ...landlords\n            ].sort((a, b)=>{\n                if (!a.match_level) return -1;\n                if (!b.match_level) return 1;\n                return a.match_level < b.match_level ? -1 : 1;\n            });\n            setNewHouses(sortLandlord);\n        }\n        if (databaseError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the database. Please contact the technical team or try agian later.\");\n        } else if (serverError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the server side. Please contact the technical team or try again later.\");\n        }\n    };\n    const handleLandlordUpdate = async (table, updateItems, landlord, listingId)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        var vals = [\n            currentCustomer.UserId\n        ];\n        if (listingId) {\n            vals = [\n                ...vals,\n                listingId\n            ];\n        } else {\n            vals = [\n                ...vals,\n                landlord.listingAdd\n            ];\n        }\n        const reqBody = {\n            listingId: listingId,\n            table: table,\n            values: vals,\n            updateItems: updateItems\n        };\n        const response = await fetch(\"/api/landlords\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reqBody)\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the landlord note\");\n                if (listingId) {\n                    updateExternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                } else {\n                    updateInternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                }\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const updateInternalLandlord = (landlord)=>{\n        const updatedLandlords = matchedLandlords.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingAdd === landlord.listingAdd) {\n                return landlord;\n            }\n            return lan;\n        });\n        setMatchedLandlords(updatedLandlords);\n    };\n    const updateExternalLandlord = (landlord)=>{\n        const updatedLandlords = newHouses.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingId === landlord.listingId) {\n                return landlord;\n            }\n            return lan;\n        });\n        setNewHouses(updatedLandlords);\n    };\n    const removeMatchedLandlords = async (table)=>{\n        const response = await fetch(\"/api/landlords?table=\".concat(table, \"&customer=\").concat(currentCustomer.UserId), {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                filterCustomers();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully delete the matched landlords\");\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const filterCustomers = ()=>{\n        const displayCustomers = customers.filter((customer)=>customer.rent_status !== \"YES\");\n        setCustomers(displayCustomers);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Context.Provider, {\n        value: {\n            customers,\n            setCustomers,\n            currentCustomer,\n            setCurrentCustomer,\n            filteredCustomersByID,\n            setFilteredCustomersByID,\n            filteredCustomersByEmail,\n            setFilteredCustomersByEmail,\n            filteredCustomersByWechat,\n            setFilteredCustomersByWechat,\n            matchedLandlords,\n            setMatchedLandlords,\n            newHouses,\n            setNewHouses,\n            //updateCurrentCustomer,\n            // updateCurrentCustomerByID,\n            // updateCurrentCustomerByEmail,\n            // updateCurrentCustomerByWechat,\n            dayDifference,\n            ifLandlordMatched,\n            handleCustomerUpdate,\n            getMatchedLandlords,\n            handleLandlordUpdate,\n            removeMatchedLandlords,\n            showProfile,\n            setShowProfile,\n            developers,\n            setDevelopers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\c\\\\Desktop\\\\documents\\\\wml\\\\wml-test-main\\\\wml-test-main\\\\context\\\\StateContext.js\",\n        lineNumber: 261,\n        columnNumber: 9\n    }, undefined);\n};\n_s(StateContext, \"58zMJRRLy2pkIefCljOdM0xcpLw=\");\n_c = StateContext;\nconst useStateContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Context);\n};\n_s1(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateContext\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb250ZXh0L1N0YXRlQ29udGV4dC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFtRTtBQUMzQjtBQUNkO0FBQzFCLE1BQU1NLHdCQUFVTCxvREFBYUE7QUFFdEIsTUFBTU0sZUFBZSxTQUFrQjtRQUFqQixFQUFFQyxTQUFRLEVBQUU7O0lBQ3JDLFlBQVk7SUFDWixNQUFNLENBQUNDLFdBQVdDLGFBQWEsR0FBR1AsK0NBQVFBLENBQUMsRUFBRTtJQUM3QyxNQUFNLENBQUNRLGlCQUFpQkMsbUJBQW1CLEdBQUdULCtDQUFRQTtJQUN0RCxNQUFNLENBQUNVLHVCQUF1QkMseUJBQXlCLEdBQUdYLCtDQUFRQSxDQUFDLEVBQUU7SUFDckUsTUFBTSxDQUFDWSwwQkFBMEJDLDRCQUE0QixHQUFHYiwrQ0FBUUEsQ0FBQyxFQUFFO0lBQzNFLE1BQU0sQ0FBQ2MsMkJBQTJCQyw2QkFBNkIsR0FBR2YsK0NBQVFBLENBQUMsRUFBRTtJQUM3RSxxQkFBcUI7SUFDckIsTUFBTSxDQUFDZ0Isa0JBQWtCQyxvQkFBb0IsR0FBR2pCLCtDQUFRQSxDQUFDLEVBQUU7SUFDM0QscUJBQXFCO0lBQ3JCLE1BQU0sQ0FBQ2tCLFdBQVdDLGFBQWEsR0FBR25CLCtDQUFRQSxDQUFDLEVBQUU7SUFFN0MsTUFBTSxDQUFDb0IsYUFBYUMsZUFBZSxHQUFHckIsK0NBQVFBLENBQUMsS0FBSztJQUNwRCxNQUFNLENBQUNzQixZQUFZQyxjQUFjLEdBQUd2QiwrQ0FBUUEsQ0FBQyxFQUFFO0lBRS9DLE1BQU13QixnQkFBZ0IsQ0FBQ0MsT0FBT0MsUUFBVTtRQUNwQyxJQUFJQyxtQkFBb0JELE1BQU1FLE9BQU8sS0FBS0gsTUFBTUcsT0FBTztRQUVuRCxpREFBaUQ7UUFDckQsSUFBSUMsbUJBQW1CRixtQkFBb0IsUUFBTyxPQUFPLEVBQUM7UUFDMUQsT0FBT0U7SUFDWDtJQUVBLE1BQU1DLHdCQUF3QixDQUFDQyxXQUFhO1FBQ3hDLE1BQU1DLGtCQUFrQjFCLFVBQVUyQixHQUFHLENBQUMsQ0FBQ0MsTUFBUTtZQUMzQyxJQUFJQSxJQUFJQyxNQUFNLEtBQUtKLFNBQVNJLE1BQU0sRUFBRTtnQkFDaEMxQixtQkFBbUJzQjtnQkFDbkIsT0FBT0E7WUFDWCxDQUFDO1lBQ0QsT0FBT0c7UUFDWDtRQUNBM0IsYUFBYXlCO0lBQ2pCO0lBRUEsTUFBTUksb0JBQW9CLENBQUNDLGVBQWlCO1FBQ3hDLE1BQU1DLFVBQVd0QixpQkFBaUJ1QixNQUFNLENBQUMsQ0FBQ0MsV0FBYTtZQUNuRCxJQUFJQSxTQUFTQyxVQUFVLEtBQUtKLGFBQWFJLFVBQVUsRUFBRTtnQkFDakQsT0FBT0Q7WUFDWCxDQUFDO1FBQ0w7UUFDQSxPQUFPRixRQUFRSSxNQUFNLEdBQUc7SUFDNUI7SUFFQSxNQUFNQyw2QkFBNkIsQ0FBQ0MsYUFBZTtRQUUvQyxNQUFNQyxrQkFBa0IsSUFBSUMsT0FBTztRQUVuQyxPQUFPRCxnQkFBZ0JFLElBQUksQ0FBQ0g7SUFDaEM7SUFFQSxNQUFNSSxvQkFBb0IsQ0FBQ0MsWUFBYztRQUVyQyxNQUFNQyxpQkFBaUIsSUFBSUosT0FBTztRQUVsQyxPQUFPSSxlQUFlSCxJQUFJLENBQUNFO0lBQy9CO0lBRUEsTUFBTUUsdUJBQXVCLE9BQU1DLGFBQWFyQixXQUFhO1FBQ3pELElBQUlxQixZQUFZVixNQUFNLEtBQUssR0FBRztZQUMxQjtRQUNKLENBQUM7UUFFRCxJQUFJLENBQUNDLDJCQUEyQlosUUFBUSxDQUFDLHlCQUF5QixHQUFHO1lBQ2pFOUIsd0RBQVcsQ0FBRTtZQUNiO1FBQ0osQ0FBQztRQUdELElBQUksQ0FBQ3FELDRDQUE0Q3ZCLFFBQVEsQ0FBQyx5QkFBeUIsR0FBRztZQUNsRjlCLHdEQUFXLENBQUU7WUFDYjtRQUNKLENBQUM7UUFDRCxNQUFNc0QsV0FBVyxNQUFNQyxNQUFNLGtCQUFrQyxPQUFoQnpCLFNBQVNJLE1BQU0sR0FBSTtZQUM5RHNCLFFBQVE7WUFDUkMsU0FBUztnQkFDTCxnQkFBZ0I7WUFDcEI7WUFDQUMsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO2dCQUNqQkMsTUFBTTtvQkFDRixHQUFHVixXQUFXO29CQUNkLG9CQUFvQmxELDRDQUFLQSxDQUFDLElBQUk2RCxRQUFRQyxNQUFNLENBQUM7Z0JBQ2pEO1lBQ0o7UUFDSjtRQUVBLElBQUlULFNBQVNVLE1BQU0sS0FBSyxLQUFJO1lBQ3hCLE1BQU1DLE9BQU8sTUFBTVgsU0FBU1ksSUFBSTtZQUNoQyxJQUFJLENBQUNELEtBQUtiLEtBQUssRUFBRTtnQkFDYnBELDBEQUFhLENBQUM7Z0JBQ2QsTUFBTW9FLGVBQWU7b0JBQUMsR0FBR3RDLFFBQVE7b0JBQUUsb0JBQW9CN0IsNENBQUtBLENBQUMsSUFBSTZELFFBQVFDLE1BQU0sQ0FBQztnQkFBc0I7Z0JBQ3RHbEMsc0JBQXNCdUM7Z0JBQ3RCO1lBQ0osT0FBTztnQkFDSHBFLHdEQUFXLENBQUMsc0VBQXNGLE9BQWhCaUUsS0FBS2IsS0FBSyxDQUFDaUIsSUFBSSxFQUFDO2dCQUNsRztZQUNKLENBQUM7UUFDTCxDQUFDO1FBQ0RyRSx3REFBVyxDQUFDLDhFQUE4RixPQUFoQnNELFNBQVNVLE1BQU0sRUFBQztJQUM5RztJQUVBLE1BQU1NLHNCQUFzQixPQUFPQyxRQUFRQyxhQUFlO1FBQ3RELElBQUlDLGdCQUFnQixLQUFLO1FBQ3pCLElBQUlDLGNBQWMsS0FBSztRQUN2QixJQUFJQyxZQUFZLEVBQUU7UUFDbEIsTUFBTUMsU0FBU0MsT0FBT0MsT0FBTyxDQUFDUCxRQUFRdkMsR0FBRyxDQUFDLFNBQWdCO2dCQUFmLENBQUMrQyxLQUFLQyxNQUFNO1lBQ25ELE9BQU9BO1FBQ1g7UUFFQSxJQUFLLE1BQU1DLFFBQVFMLE9BQVE7WUFDdkIsTUFBTU0sU0FBUztnQkFBRTNFLGdCQUFnQjJCLE1BQU07YUFBRTtZQUV6QyxNQUFNb0IsV0FBVyxNQUFNQyxNQUFNLHdCQUErQzJCLE9BQXZCTixNQUFNLENBQUNLLEtBQUssRUFBQyxZQUFpQixPQUFQQyxTQUFVO2dCQUNsRjFCLFFBQVE7Z0JBQ1JDLFNBQVM7b0JBQ0wsZ0JBQWdCO2dCQUNwQjtZQUNKO1lBRUEsSUFBSUgsU0FBU1UsTUFBTSxLQUFLLEtBQUk7Z0JBQ3hCLE1BQU1DLE9BQU8sTUFBTVgsU0FBU1ksSUFBSTtnQkFDaEMsTUFBTWlCLGdCQUFnQnhCLEtBQUt5QixLQUFLLENBQUN6QixLQUFLQyxTQUFTLENBQUNLO2dCQUNoRCxJQUFJLENBQUNBLEtBQUtiLEtBQUssRUFBRTtvQkFDYixJQUFJK0IsY0FBYzFDLE1BQU0sR0FBRyxHQUFHO3dCQUMxQmtDLFlBQVk7K0JBQUlBOytCQUFjUTt5QkFBYztvQkFDaEQsQ0FBQztnQkFDTCxPQUFPO29CQUNIVixnQkFBZ0IsSUFBSTtnQkFDeEIsQ0FBQztZQUNMLE9BQU87Z0JBQ0hDLGNBQWMsSUFBSTtZQUN0QixDQUFDO1FBQ0w7UUFFQSxJQUFJRixZQUFZO1lBQ1osTUFBTWEsZUFBZTttQkFBSVY7YUFBVSxDQUFDVyxJQUFJLENBQUMsQ0FBQ0MsR0FBR0MsSUFBTTtnQkFDL0MsSUFBRyxDQUFDRCxFQUFFRSxJQUFJLEVBQUUsT0FBTyxDQUFDO2dCQUNwQixJQUFHLENBQUNELEVBQUVDLElBQUksRUFBRSxPQUFPO2dCQUNuQixPQUFPRixFQUFFRSxJQUFJLEdBQUdELEVBQUVDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQztZQUNuQztZQUNBekUsb0JBQW9CcUU7UUFDeEIsT0FBTztZQUNILE1BQU1BLGVBQWU7bUJBQUlWO2FBQVUsQ0FBQ1csSUFBSSxDQUFDLENBQUNDLEdBQUdDLElBQU07Z0JBQy9DLElBQUcsQ0FBQ0QsRUFBRUcsV0FBVyxFQUFFLE9BQU8sQ0FBQztnQkFDM0IsSUFBRyxDQUFDRixFQUFFRSxXQUFXLEVBQUUsT0FBTztnQkFDMUIsT0FBT0gsRUFBRUcsV0FBVyxHQUFHRixFQUFFRSxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUM7WUFDakQ7WUFDQXhFLGFBQWFtRTtRQUNqQixDQUFDO1FBRUQsSUFBSVosZUFBZTtZQUNmekUsd0RBQVcsQ0FBRTtRQUNqQixPQUFPLElBQUkwRSxhQUFhO1lBQ3BCMUUsd0RBQVcsQ0FBRTtRQUNqQixDQUFDO0lBQ0w7SUFFQSxNQUFNMkYsdUJBQXVCLE9BQU1DLE9BQU96QyxhQUFhWixVQUFVc0QsWUFBYztRQUMzRSxJQUFJMUMsWUFBWVYsTUFBTSxLQUFLLEdBQUc7WUFDMUI7UUFDSixDQUFDO1FBRUQsSUFBSW9CLE9BQU87WUFBQ3RELGdCQUFnQjJCLE1BQU07U0FBQztRQUVuQyxJQUFJMkQsV0FBVztZQUNYaEMsT0FBTzttQkFBSUE7Z0JBQU1nQzthQUFVO1FBQy9CLE9BQU87WUFDSGhDLE9BQU87bUJBQUlBO2dCQUFNdEIsU0FBU0MsVUFBVTthQUFDO1FBQ3pDLENBQUM7UUFFRCxNQUFNc0QsVUFBVTtZQUNaRCxXQUFXQTtZQUNYRCxPQUFPQTtZQUNQVixRQUFRckI7WUFDUlYsYUFBYUE7UUFDakI7UUFFQSxNQUFNRyxXQUFXLE1BQU1DLE1BQU0sa0JBQWtCO1lBQzNDQyxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ0wsZ0JBQWdCO1lBQ3BCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ2tDO1FBQ3pCO1FBRUEsSUFBSXhDLFNBQVNVLE1BQU0sS0FBSyxLQUFJO1lBQ3hCLE1BQU1DLE9BQU8sTUFBTVgsU0FBU1ksSUFBSTtZQUNoQyxJQUFJLENBQUNELEtBQUtiLEtBQUssRUFBRTtnQkFDYnBELDBEQUFhLENBQUM7Z0JBQ2QsSUFBSTZGLFdBQVc7b0JBQ1hFLHVCQUF1Qjt3QkFBQyxHQUFHeEQsUUFBUTt3QkFBRSxHQUFHWSxXQUFXO29CQUFBO2dCQUN2RCxPQUFPO29CQUNINkMsdUJBQXVCO3dCQUFDLEdBQUd6RCxRQUFRO3dCQUFFLEdBQUdZLFdBQVc7b0JBQUE7Z0JBQ3ZELENBQUM7Z0JBQ0Q7WUFDSixPQUFPO2dCQUNIbkQsd0RBQVcsQ0FBQywrREFBK0UsT0FBaEJpRSxLQUFLYixLQUFLLENBQUNpQixJQUFJLEVBQUM7Z0JBQzNGO1lBQ0osQ0FBQztRQUNMLENBQUM7UUFFRHJFLHdEQUFXLENBQUMsdUVBQXVGLE9BQWhCc0QsU0FBU1UsTUFBTSxFQUFDO0lBQ3ZHO0lBRUEsTUFBTWdDLHlCQUF5QixDQUFDekQsV0FBYTtRQUN6QyxNQUFNMEQsbUJBQW1CbEYsaUJBQWlCaUIsR0FBRyxDQUFDLENBQUNrRSxNQUFRO1lBQ25ELElBQUlBLElBQUloRSxNQUFNLEtBQUtLLFNBQVNMLE1BQU0sSUFBSWdFLElBQUkxRCxVQUFVLEtBQUtELFNBQVNDLFVBQVUsRUFBRTtnQkFDMUUsT0FBT0Q7WUFDWCxDQUFDO1lBQ0QsT0FBTzJEO1FBQ1g7UUFFQWxGLG9CQUFvQmlGO0lBQ3hCO0lBRUEsTUFBTUYseUJBQXlCLENBQUN4RCxXQUFhO1FBQ3pDLE1BQU0wRCxtQkFBbUJoRixVQUFVZSxHQUFHLENBQUMsQ0FBQ2tFLE1BQVE7WUFDNUMsSUFBSUEsSUFBSWhFLE1BQU0sS0FBS0ssU0FBU0wsTUFBTSxJQUFJZ0UsSUFBSUwsU0FBUyxLQUFLdEQsU0FBU3NELFNBQVMsRUFBRTtnQkFDeEUsT0FBT3REO1lBQ1gsQ0FBQztZQUNELE9BQU8yRDtRQUNYO1FBRUFoRixhQUFhK0U7SUFDakI7SUFFQSxNQUFNRSx5QkFBeUIsT0FBTVAsUUFBVTtRQUMzQyxNQUFNdEMsV0FBVyxNQUFNQyxNQUFNLHdCQUEwQ2hELE9BQWxCcUYsT0FBTSxjQUFtQyxPQUF2QnJGLGdCQUFnQjJCLE1BQU0sR0FBSTtZQUM3RnNCLFFBQVE7WUFDUkMsU0FBUztnQkFDTCxnQkFBZ0I7WUFDcEI7UUFDSjtRQUVBLElBQUlILFNBQVNVLE1BQU0sS0FBSyxLQUFJO1lBQ3hCLE1BQU1DLE9BQU8sTUFBTVgsU0FBU1ksSUFBSTtZQUNoQyxJQUFJLENBQUNELEtBQUtiLEtBQUssRUFBRTtnQkFDYmdEO2dCQUNBcEcsMERBQWEsQ0FBQztnQkFDZDtZQUNKLE9BQU87Z0JBQ0hBLHdEQUFXLENBQUMsMkRBQTJFLE9BQWhCaUUsS0FBS2IsS0FBSyxDQUFDaUIsSUFBSSxFQUFDO2dCQUN2RjtZQUNKLENBQUM7UUFDTCxDQUFDO1FBRURyRSx3REFBVyxDQUFDLG1FQUFtRixPQUFoQnNELFNBQVNVLE1BQU0sRUFBQztJQUNuRztJQUVBLE1BQU1vQyxrQkFBa0IsSUFBTTtRQUMxQixNQUFNQyxtQkFBbUJoRyxVQUFVaUMsTUFBTSxDQUFDLENBQUNSLFdBQWFBLFNBQVN3RSxXQUFXLEtBQUs7UUFDakZoRyxhQUFhK0Y7SUFDakI7SUFHQSxxQkFDSSw4REFBQ25HLFFBQVFxRyxRQUFRO1FBQUN2QixPQUFPO1lBQ3JCM0U7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQUM7WUFDQSx3QkFBd0I7WUFDeEIsNkJBQTZCO1lBQzdCLGdDQUFnQztZQUNoQyxpQ0FBaUM7WUFDakNLO1lBQ0FZO1lBQ0FlO1lBQ0FvQjtZQUNBcUI7WUFDQVE7WUFDQWhGO1lBQ0FDO1lBQ0FDO1lBQ0FDO1FBQ0o7a0JBRUtsQjs7Ozs7O0FBR2IsRUFBRTtHQWpTV0Q7S0FBQUE7QUFtU04sTUFBTXFHLGtCQUFrQixJQUFNMUc7O0lBQUFBLE9BQUFBLGlEQUFVQSxDQUFDSTtBQUFPLEVBQUU7SUFBNUNzRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb250ZXh0L1N0YXRlQ29udGV4dC5qcz9iMWIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcbmltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5jb25zdCBDb250ZXh0ID0gY3JlYXRlQ29udGV4dCgpO1xuXG5leHBvcnQgY29uc3QgU3RhdGVDb250ZXh0ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICAgIC8vIGN1c3RvbWVyc1xuICAgIGNvbnN0IFtjdXN0b21lcnMsIHNldEN1c3RvbWVyc10gPSB1c2VTdGF0ZShbXSlcbiAgICBjb25zdCBbY3VycmVudEN1c3RvbWVyLCBzZXRDdXJyZW50Q3VzdG9tZXJdID0gdXNlU3RhdGUoKVxuICAgIGNvbnN0IFtmaWx0ZXJlZEN1c3RvbWVyc0J5SUQsIHNldEZpbHRlcmVkQ3VzdG9tZXJzQnlJRF0gPSB1c2VTdGF0ZShbXSlcbiAgICBjb25zdCBbZmlsdGVyZWRDdXN0b21lcnNCeUVtYWlsLCBzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5RW1haWxdID0gdXNlU3RhdGUoW10pXG4gICAgY29uc3QgW2ZpbHRlcmVkQ3VzdG9tZXJzQnlXZWNoYXQsIHNldEZpbHRlcmVkQ3VzdG9tZXJzQnlXZWNoYXRdID0gdXNlU3RhdGUoW10pXG4gICAgLy8gaW50ZXJuYWwgbGFuZGxvcmRzXG4gICAgY29uc3QgW21hdGNoZWRMYW5kbG9yZHMsIHNldE1hdGNoZWRMYW5kbG9yZHNdID0gdXNlU3RhdGUoW10pXG4gICAgLy8gZXh0ZXJuYWwgbGFuZGxvcmRzXG4gICAgY29uc3QgW25ld0hvdXNlcywgc2V0TmV3SG91c2VzXSA9IHVzZVN0YXRlKFtdKVxuXG4gICAgY29uc3QgW3Nob3dQcm9maWxlLCBzZXRTaG93UHJvZmlsZV0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgICBjb25zdCBbZGV2ZWxvcGVycywgc2V0RGV2ZWxvcGVyc10gPSB1c2VTdGF0ZShbXSlcblxuICAgIGNvbnN0IGRheURpZmZlcmVuY2UgPSAoZGF0ZTEsIGRhdGUyKSA9PiB7XG4gICAgICAgIHZhciBkaWZmZXJlbmNlSW5UaW1lID0gIGRhdGUyLmdldFRpbWUoKSAtIGRhdGUxLmdldFRpbWUoKTtcbiAgICAgICAgXG4gICAgICAgICAgICAvLyBUbyBjYWxjdWxhdGUgdGhlIG5vLiBvZiBkYXlzIGJldHdlZW4gdHdvIGRhdGVzXG4gICAgICAgIHZhciBkaWZmZXJlbmNlSW5EYXlzID0gZGlmZmVyZW5jZUluVGltZSAvICgxMDAwICogMzYwMCAqIDI0KTtcbiAgICAgICAgcmV0dXJuIGRpZmZlcmVuY2VJbkRheXNcbiAgICB9XG4gICAgXG4gICAgY29uc3QgdXBkYXRlQ3VycmVudEN1c3RvbWVyID0gKGN1c3RvbWVyKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRDdXN0b21lciA9IGN1c3RvbWVycy5tYXAoKGN1cykgPT4ge1xuICAgICAgICAgICAgaWYgKGN1cy5Vc2VySWQgPT09IGN1c3RvbWVyLlVzZXJJZCkge1xuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRDdXN0b21lcihjdXN0b21lcilcbiAgICAgICAgICAgICAgICByZXR1cm4gY3VzdG9tZXJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjdXNcbiAgICAgICAgfSlcbiAgICAgICAgc2V0Q3VzdG9tZXJzKHVwZGF0ZWRDdXN0b21lcilcbiAgICB9XG5cbiAgICBjb25zdCBpZkxhbmRsb3JkTWF0Y2hlZCA9IChsYW5kbG9yZEl0ZW0pID0+IHtcbiAgICAgICAgY29uc3QgZmlsTGlzdCA9ICBtYXRjaGVkTGFuZGxvcmRzLmZpbHRlcigobGFuZGxvcmQpID0+IHtcbiAgICAgICAgICAgIGlmIChsYW5kbG9yZC5saXN0aW5nQWRkID09PSBsYW5kbG9yZEl0ZW0ubGlzdGluZ0FkZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsYW5kbG9yZFxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4gZmlsTGlzdC5sZW5ndGggPiAwXG4gICAgfVxuXG4gICAgY29uc3QgdmFsaWRhdGVDYW5hZGlhblBvc3RhbENvZGUgPSAocG9zdGFsQ29kZSkgPT4geyAgICBcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHBvc3RhbENvZGVSZWdleCA9IG5ldyBSZWdFeHAoL14oPzpbQS1aXVxcZFtBLVpdWyAtXT9cXGRbQS1aXVxcZCkkL2kpO1xuICAgICAgIFxuICAgICAgICByZXR1cm4gcG9zdGFsQ29kZVJlZ2V4LnRlc3QocG9zdGFsQ29kZSlcbiAgICB9XG5cbiAgICBjb25zdCB2YWxpZGF0ZVN0YXJ0VGltZSA9IChzdGFydFRpbWUpID0+IHsgICAgXG4gICAgICAgIFxuICAgICAgICBjb25zdCBzdGFydFRpbWVSZWdleCA9IG5ldyBSZWdFeHAoL15cXGR7NH0tKDBbMS05XXwxWzAtMl0pLSgwWzEtOV18WzEyXVxcZHwzWzAxXSkkL2kpO1xuICAgICAgIFxuICAgICAgICByZXR1cm4gc3RhcnRUaW1lUmVnZXgudGVzdChzdGFydFRpbWUpXG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlQ3VzdG9tZXJVcGRhdGUgPSBhc3luYyh1cGRhdGVJdGVtcywgY3VzdG9tZXIpID0+IHtcbiAgICAgICAgaWYgKHVwZGF0ZUl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaWYgKCF2YWxpZGF0ZUNhbmFkaWFuUG9zdGFsQ29kZShjdXN0b21lcltcIuivt+Whq+WGmeaCqOeahOebrueahOWcsOmCrue8lu+8jOabtOWlveiOt+W+l+mZhOi/kemCu+mHjOeahOW4ruWKqVwiXSkpIHtcbiAgICAgICAgICAgIHRvYXN0LmVycm9yKGBQbGVhc2UgZW50ZXIgYSB2YWxpZCBwb3N0YWwgY29kZS5gKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cblxuXG4gICAgICAgIGlmICghdmFsaWRhdGVDYW5hZGlhblBvc3RhbENvZGV2YWxpZGF0ZVN0YXJ0VGltZShjdXN0b21lcltcIuivt+Whq+WGmeaCqOeahOebrueahOWcsOmCrue8lu+8jOabtOWlveiOt+W+l+mZhOi/kemCu+mHjOeahOW4ruWKqVwiXSkpIHtcbiAgICAgICAgICAgIHRvYXN0LmVycm9yKGBQbGVhc2UgZW50ZXIgYSB2YWxpZCBwb3N0YWwgY29kZS5gKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9jdXN0b21lcnMvJHtjdXN0b21lci5Vc2VySWR9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICB2YWxzOiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnVwZGF0ZUl0ZW1zLCBcbiAgICAgICAgICAgICAgICAgICAgJ0xhc3QgVXBkYXRlIERhdGUnOiBkYXlqcyhuZXcgRGF0ZSgpKS5mb3JtYXQoJ1lZWVktTU0tREQgSEg6bW06c3MnKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKXtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICAgIGlmICghZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1N1Y2Nlc3NmdWxseSB1cGRhdGVkIHRoZSBjdXN0b21lciBpbmZvcm1hdGlvbicpXG4gICAgICAgICAgICAgICAgY29uc3QgbmV3X2N1c3RvbWVyID0gey4uLmN1c3RvbWVyLCAnTGFzdCBVcGRhdGUgRGF0ZSc6IGRheWpzKG5ldyBEYXRlKCkpLmZvcm1hdCgnWVlZWS1NTS1ERCBISDptbTpzcycpfVxuICAgICAgICAgICAgICAgIHVwZGF0ZUN1cnJlbnRDdXN0b21lcihuZXdfY3VzdG9tZXIpXG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRvYXN0LmVycm9yKGBGYWlsZWQgdG8gdXBkYXRlIHRoZSBjdXN0b21lciBpbmZvcm1hdGlvbiB0byB0aGUgZGF0YWJhc2UuIEVycm9yOiAoJHtkYXRhLmVycm9yLmNvZGV9KSwgUGxlYXNlIGNoZWNrIHRoZSBpbnB1dCBvciB0cnkgYWdpYW4gbGF0ZXIuYClcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSB0aGUgY3VzdG9tZXIgaW5mb3JtYXRpb24gdG8gdGhlIHNlcnZlciBzaWRlLiBFcnJvciBjb2RlOiAoJHtyZXNwb25zZS5zdGF0dXN9KSwgUGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5gKVxuICAgIH1cblxuICAgIGNvbnN0IGdldE1hdGNoZWRMYW5kbG9yZHMgPSBhc3luYyAodGFibGVzLCBpZkludGVybmFsKSA9PiB7XG4gICAgICAgIGxldCBkYXRhYmFzZUVycm9yID0gZmFsc2VcbiAgICAgICAgbGV0IHNlcnZlckVycm9yID0gZmFsc2VcbiAgICAgICAgbGV0IGxhbmRsb3JkcyA9IFtdXG4gICAgICAgIGNvbnN0IGNpdGllcyA9IE9iamVjdC5lbnRyaWVzKHRhYmxlcykubWFwKChba2V5LCB2YWx1ZV0pPT57XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVcbiAgICAgICAgfSlcblxuICAgICAgICBmb3IgKGNvbnN0IGNpdHkgaW4gY2l0aWVzKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSBbIGN1cnJlbnRDdXN0b21lci5Vc2VySWQgXVxuICAgIFxuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgL2FwaS9sYW5kbG9yZHM/dGFibGU9JHtjaXRpZXNbY2l0eV19JnZhbHVlcz0ke3ZhbHVlc31gLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICBcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCl7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKVxuICAgICAgICAgICAgICAgIGNvbnN0IGxhbmRsb3Jkc0RhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKVxuICAgICAgICAgICAgICAgIGlmICghZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBpZiAobGFuZGxvcmRzRGF0YS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsYW5kbG9yZHMgPSBbLi4ubGFuZGxvcmRzLCAuLi5sYW5kbG9yZHNEYXRhXVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YWJhc2VFcnJvciA9IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNlcnZlckVycm9yID0gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoaWZJbnRlcm5hbCkge1xuICAgICAgICAgICAgY29uc3Qgc29ydExhbmRsb3JkID0gWy4uLmxhbmRsb3Jkc10uc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgIGlmKCFhLm5vdGUpIHJldHVybiAtMTtcbiAgICAgICAgICAgICAgICBpZighYi5ub3RlKSByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5ub3RlIDwgYi5ub3RlID8gLTEgOiAxO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzZXRNYXRjaGVkTGFuZGxvcmRzKHNvcnRMYW5kbG9yZClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHNvcnRMYW5kbG9yZCA9IFsuLi5sYW5kbG9yZHNdLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgICAgICBpZighYS5tYXRjaF9sZXZlbCkgcmV0dXJuIC0xO1xuICAgICAgICAgICAgICAgIGlmKCFiLm1hdGNoX2xldmVsKSByZXR1cm4gMTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYS5tYXRjaF9sZXZlbCA8IGIubWF0Y2hfbGV2ZWwgPyAtMSA6IDE7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNldE5ld0hvdXNlcyhzb3J0TGFuZGxvcmQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGF0YWJhc2VFcnJvcikge1xuICAgICAgICAgICAgdG9hc3QuZXJyb3IoYEZhaWxlZCB0byBmZXRjaCB0aGUgbWF0Y2hlZCBsYW5kbG9yZHMgZnJvbSB0aGUgZGF0YWJhc2UuIFBsZWFzZSBjb250YWN0IHRoZSB0ZWNobmljYWwgdGVhbSBvciB0cnkgYWdpYW4gbGF0ZXIuYClcbiAgICAgICAgfSBlbHNlIGlmIChzZXJ2ZXJFcnJvcikge1xuICAgICAgICAgICAgdG9hc3QuZXJyb3IoYEZhaWxlZCB0byBmZXRjaCB0aGUgbWF0Y2hlZCBsYW5kbG9yZHMgZnJvbSB0aGUgc2VydmVyIHNpZGUuIFBsZWFzZSBjb250YWN0IHRoZSB0ZWNobmljYWwgdGVhbSBvciB0cnkgYWdhaW4gbGF0ZXIuYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZUxhbmRsb3JkVXBkYXRlID0gYXN5bmModGFibGUsIHVwZGF0ZUl0ZW1zLCBsYW5kbG9yZCwgbGlzdGluZ0lkKSA9PiB7XG4gICAgICAgIGlmICh1cGRhdGVJdGVtcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHZhbHMgPSBbY3VycmVudEN1c3RvbWVyLlVzZXJJZF1cblxuICAgICAgICBpZiAobGlzdGluZ0lkKSB7XG4gICAgICAgICAgICB2YWxzID0gWy4uLnZhbHMsIGxpc3RpbmdJZF1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhbHMgPSBbLi4udmFscywgbGFuZGxvcmQubGlzdGluZ0FkZF1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHJlcUJvZHkgPSB7XG4gICAgICAgICAgICBsaXN0aW5nSWQ6IGxpc3RpbmdJZCxcbiAgICAgICAgICAgIHRhYmxlOiB0YWJsZSxcbiAgICAgICAgICAgIHZhbHVlczogdmFscyxcbiAgICAgICAgICAgIHVwZGF0ZUl0ZW1zOiB1cGRhdGVJdGVtc1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiL2FwaS9sYW5kbG9yZHNcIiwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUFVUJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHJlcUJvZHkpXG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKXtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICAgIGlmICghZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgIHRvYXN0LnN1Y2Nlc3MoJ1N1Y2Nlc3NmdWxseSB1cGRhdGVkIHRoZSBsYW5kbG9yZCBub3RlJylcbiAgICAgICAgICAgICAgICBpZiAobGlzdGluZ0lkKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUV4dGVybmFsTGFuZGxvcmQoey4uLmxhbmRsb3JkLCAuLi51cGRhdGVJdGVtc30pXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlSW50ZXJuYWxMYW5kbG9yZCh7Li4ubGFuZGxvcmQsIC4uLnVwZGF0ZUl0ZW1zfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRvYXN0LmVycm9yKGBGYWlsZWQgdG8gdXBkYXRlIHRoZSBsYW5kbG9yZCBub3RlIHRvIHRoZSBkYXRhYmFzZS4gRXJyb3I6ICgke2RhdGEuZXJyb3IuY29kZX0pLCBQbGVhc2UgY2hlY2sgdGhlIGlucHV0IG9yIHRyeSBhZ2lhbiBsYXRlci5gKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHVwZGF0ZSB0aGUgbGFuZGxvcmQgbm90ZSB0byB0aGUgc2VydmVyIHNpZGUuIEVycm9yIGNvZGU6ICgke3Jlc3BvbnNlLnN0YXR1c30pLCBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyLmApXG4gICAgfVxuXG4gICAgY29uc3QgdXBkYXRlSW50ZXJuYWxMYW5kbG9yZCA9IChsYW5kbG9yZCkgPT4ge1xuICAgICAgICBjb25zdCB1cGRhdGVkTGFuZGxvcmRzID0gbWF0Y2hlZExhbmRsb3Jkcy5tYXAoKGxhbikgPT4ge1xuICAgICAgICAgICAgaWYgKGxhbi5Vc2VySWQgPT09IGxhbmRsb3JkLlVzZXJJZCAmJiBsYW4ubGlzdGluZ0FkZCA9PT0gbGFuZGxvcmQubGlzdGluZ0FkZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsYW5kbG9yZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGxhblxuICAgICAgICB9KVxuXG4gICAgICAgIHNldE1hdGNoZWRMYW5kbG9yZHModXBkYXRlZExhbmRsb3JkcylcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVFeHRlcm5hbExhbmRsb3JkID0gKGxhbmRsb3JkKSA9PiB7XG4gICAgICAgIGNvbnN0IHVwZGF0ZWRMYW5kbG9yZHMgPSBuZXdIb3VzZXMubWFwKChsYW4pID0+IHtcbiAgICAgICAgICAgIGlmIChsYW4uVXNlcklkID09PSBsYW5kbG9yZC5Vc2VySWQgJiYgbGFuLmxpc3RpbmdJZCA9PT0gbGFuZGxvcmQubGlzdGluZ0lkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxhbmRsb3JkXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gbGFuXG4gICAgICAgIH0pXG5cbiAgICAgICAgc2V0TmV3SG91c2VzKHVwZGF0ZWRMYW5kbG9yZHMpXG4gICAgfVxuXG4gICAgY29uc3QgcmVtb3ZlTWF0Y2hlZExhbmRsb3JkcyA9IGFzeW5jKHRhYmxlKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hcGkvbGFuZGxvcmRzP3RhYmxlPSR7dGFibGV9JmN1c3RvbWVyPSR7Y3VycmVudEN1c3RvbWVyLlVzZXJJZH1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKXtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICAgIGlmICghZGF0YS5lcnJvcikge1xuICAgICAgICAgICAgICAgIGZpbHRlckN1c3RvbWVycygpXG4gICAgICAgICAgICAgICAgdG9hc3Quc3VjY2VzcygnU3VjY2Vzc2Z1bGx5IGRlbGV0ZSB0aGUgbWF0Y2hlZCBsYW5kbG9yZHMnKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIGRlbGV0ZSB0aGUgbGFuZGxvcmRzIG9uIHRoZSBkYXRhYmFzZS4gRXJyb3I6ICgke2RhdGEuZXJyb3IuY29kZX0pLCBQbGVhc2UgY2hlY2sgdGhlIGlucHV0IG9yIHRyeSBhZ2lhbiBsYXRlci5gKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIGRlbGV0ZSB0aGUgbGFuZGxvcmRzIG9uIHRoZSBzZXJ2ZXIgc2lkZS4gRXJyb3IgY29kZTogKCR7cmVzcG9uc2Uuc3RhdHVzfSksIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuYClcbiAgICB9XG5cbiAgICBjb25zdCBmaWx0ZXJDdXN0b21lcnMgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3BsYXlDdXN0b21lcnMgPSBjdXN0b21lcnMuZmlsdGVyKChjdXN0b21lcikgPT4gY3VzdG9tZXIucmVudF9zdGF0dXMgIT09IFwiWUVTXCIpXG4gICAgICAgIHNldEN1c3RvbWVycyhkaXNwbGF5Q3VzdG9tZXJzKVxuICAgIH1cblxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPENvbnRleHQuUHJvdmlkZXIgdmFsdWU9e3tcbiAgICAgICAgICAgIGN1c3RvbWVycyxcbiAgICAgICAgICAgIHNldEN1c3RvbWVycyxcbiAgICAgICAgICAgIGN1cnJlbnRDdXN0b21lcixcbiAgICAgICAgICAgIHNldEN1cnJlbnRDdXN0b21lcixcbiAgICAgICAgICAgIGZpbHRlcmVkQ3VzdG9tZXJzQnlJRCxcbiAgICAgICAgICAgIHNldEZpbHRlcmVkQ3VzdG9tZXJzQnlJRCxcbiAgICAgICAgICAgIGZpbHRlcmVkQ3VzdG9tZXJzQnlFbWFpbCxcbiAgICAgICAgICAgIHNldEZpbHRlcmVkQ3VzdG9tZXJzQnlFbWFpbCxcbiAgICAgICAgICAgIGZpbHRlcmVkQ3VzdG9tZXJzQnlXZWNoYXQsXG4gICAgICAgICAgICBzZXRGaWx0ZXJlZEN1c3RvbWVyc0J5V2VjaGF0LFxuICAgICAgICAgICAgbWF0Y2hlZExhbmRsb3JkcyxcbiAgICAgICAgICAgIHNldE1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBuZXdIb3VzZXMsXG4gICAgICAgICAgICBzZXROZXdIb3VzZXMsXG4gICAgICAgICAgICAvL3VwZGF0ZUN1cnJlbnRDdXN0b21lcixcbiAgICAgICAgICAgIC8vIHVwZGF0ZUN1cnJlbnRDdXN0b21lckJ5SUQsXG4gICAgICAgICAgICAvLyB1cGRhdGVDdXJyZW50Q3VzdG9tZXJCeUVtYWlsLFxuICAgICAgICAgICAgLy8gdXBkYXRlQ3VycmVudEN1c3RvbWVyQnlXZWNoYXQsXG4gICAgICAgICAgICBkYXlEaWZmZXJlbmNlLFxuICAgICAgICAgICAgaWZMYW5kbG9yZE1hdGNoZWQsXG4gICAgICAgICAgICBoYW5kbGVDdXN0b21lclVwZGF0ZSxcbiAgICAgICAgICAgIGdldE1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBoYW5kbGVMYW5kbG9yZFVwZGF0ZSxcbiAgICAgICAgICAgIHJlbW92ZU1hdGNoZWRMYW5kbG9yZHMsXG4gICAgICAgICAgICBzaG93UHJvZmlsZSxcbiAgICAgICAgICAgIHNldFNob3dQcm9maWxlLFxuICAgICAgICAgICAgZGV2ZWxvcGVycyxcbiAgICAgICAgICAgIHNldERldmVsb3BlcnNcbiAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0NvbnRleHQuUHJvdmlkZXI+XG4gICAgKVxufTtcblxuZXhwb3J0IGNvbnN0IHVzZVN0YXRlQ29udGV4dCA9ICgpID0+IHVzZUNvbnRleHQoQ29udGV4dCk7XG5cbiJdLCJuYW1lcyI6WyJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VDb250ZXh0IiwidXNlU3RhdGUiLCJ0b2FzdCIsImRheWpzIiwiQ29udGV4dCIsIlN0YXRlQ29udGV4dCIsImNoaWxkcmVuIiwiY3VzdG9tZXJzIiwic2V0Q3VzdG9tZXJzIiwiY3VycmVudEN1c3RvbWVyIiwic2V0Q3VycmVudEN1c3RvbWVyIiwiZmlsdGVyZWRDdXN0b21lcnNCeUlEIiwic2V0RmlsdGVyZWRDdXN0b21lcnNCeUlEIiwiZmlsdGVyZWRDdXN0b21lcnNCeUVtYWlsIiwic2V0RmlsdGVyZWRDdXN0b21lcnNCeUVtYWlsIiwiZmlsdGVyZWRDdXN0b21lcnNCeVdlY2hhdCIsInNldEZpbHRlcmVkQ3VzdG9tZXJzQnlXZWNoYXQiLCJtYXRjaGVkTGFuZGxvcmRzIiwic2V0TWF0Y2hlZExhbmRsb3JkcyIsIm5ld0hvdXNlcyIsInNldE5ld0hvdXNlcyIsInNob3dQcm9maWxlIiwic2V0U2hvd1Byb2ZpbGUiLCJkZXZlbG9wZXJzIiwic2V0RGV2ZWxvcGVycyIsImRheURpZmZlcmVuY2UiLCJkYXRlMSIsImRhdGUyIiwiZGlmZmVyZW5jZUluVGltZSIsImdldFRpbWUiLCJkaWZmZXJlbmNlSW5EYXlzIiwidXBkYXRlQ3VycmVudEN1c3RvbWVyIiwiY3VzdG9tZXIiLCJ1cGRhdGVkQ3VzdG9tZXIiLCJtYXAiLCJjdXMiLCJVc2VySWQiLCJpZkxhbmRsb3JkTWF0Y2hlZCIsImxhbmRsb3JkSXRlbSIsImZpbExpc3QiLCJmaWx0ZXIiLCJsYW5kbG9yZCIsImxpc3RpbmdBZGQiLCJsZW5ndGgiLCJ2YWxpZGF0ZUNhbmFkaWFuUG9zdGFsQ29kZSIsInBvc3RhbENvZGUiLCJwb3N0YWxDb2RlUmVnZXgiLCJSZWdFeHAiLCJ0ZXN0IiwidmFsaWRhdGVTdGFydFRpbWUiLCJzdGFydFRpbWUiLCJzdGFydFRpbWVSZWdleCIsImhhbmRsZUN1c3RvbWVyVXBkYXRlIiwidXBkYXRlSXRlbXMiLCJlcnJvciIsInZhbGlkYXRlQ2FuYWRpYW5Qb3N0YWxDb2RldmFsaWRhdGVTdGFydFRpbWUiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidmFscyIsIkRhdGUiLCJmb3JtYXQiLCJzdGF0dXMiLCJkYXRhIiwianNvbiIsInN1Y2Nlc3MiLCJuZXdfY3VzdG9tZXIiLCJjb2RlIiwiZ2V0TWF0Y2hlZExhbmRsb3JkcyIsInRhYmxlcyIsImlmSW50ZXJuYWwiLCJkYXRhYmFzZUVycm9yIiwic2VydmVyRXJyb3IiLCJsYW5kbG9yZHMiLCJjaXRpZXMiLCJPYmplY3QiLCJlbnRyaWVzIiwia2V5IiwidmFsdWUiLCJjaXR5IiwidmFsdWVzIiwibGFuZGxvcmRzRGF0YSIsInBhcnNlIiwic29ydExhbmRsb3JkIiwic29ydCIsImEiLCJiIiwibm90ZSIsIm1hdGNoX2xldmVsIiwiaGFuZGxlTGFuZGxvcmRVcGRhdGUiLCJ0YWJsZSIsImxpc3RpbmdJZCIsInJlcUJvZHkiLCJ1cGRhdGVFeHRlcm5hbExhbmRsb3JkIiwidXBkYXRlSW50ZXJuYWxMYW5kbG9yZCIsInVwZGF0ZWRMYW5kbG9yZHMiLCJsYW4iLCJyZW1vdmVNYXRjaGVkTGFuZGxvcmRzIiwiZmlsdGVyQ3VzdG9tZXJzIiwiZGlzcGxheUN1c3RvbWVycyIsInJlbnRfc3RhdHVzIiwiUHJvdmlkZXIiLCJ1c2VTdGF0ZUNvbnRleHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context/StateContext.js\n"));

/***/ })

});