"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/StateContext.js":
/*!*********************************!*\
  !*** ./context/StateContext.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StateContext\": function() { return /* binding */ StateContext; },\n/* harmony export */   \"useStateContext\": function() { return /* binding */ useStateContext; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hot-toast */ \"./node_modules/react-hot-toast/dist/index.mjs\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_3__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\nconst Context = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst StateContext = (param)=>{\n    let { children  } = param;\n    _s();\n    // customers\n    const [customers, setCustomers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentCustomer, setCurrentCustomer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const [filteredCustomersByID, setFilteredCustomersByID] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByEmail, setFilteredCustomersByEmail] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [filteredCustomersByWechat, setFilteredCustomersByWechat] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // internal landlords\n    const [matchedLandlords, setMatchedLandlords] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    // external landlords\n    const [newHouses, setNewHouses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [showProfile, setShowProfile] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [developers, setDevelopers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const dayDifference = (date1, date2)=>{\n        var differenceInTime = date2.getTime() - date1.getTime();\n        // To calculate the no. of days between two dates\n        var differenceInDays = differenceInTime / (1000 * 3600 * 24);\n        return differenceInDays;\n    };\n    const updateCurrentCustomer = (customer)=>{\n        const updatedCustomer = customers.map((cus)=>{\n            if (cus.UserId === customer.UserId) {\n                setCurrentCustomer(customer);\n                return customer;\n            }\n            return cus;\n        });\n        setCustomers(updatedCustomer);\n    };\n    const ifLandlordMatched = (landlordItem)=>{\n        const filList = matchedLandlords.filter((landlord)=>{\n            if (landlord.listingAdd === landlordItem.listingAdd) {\n                return landlord;\n            }\n        });\n        return filList.length > 0;\n    };\n    const validateCanadianPostalCode = (postalCode)=>{\n        const postalCodeRegex = new RegExp(/^(?:[A-Z]\\d[A-Z][ -]?\\d[A-Z]\\d)$/i);\n        return postalCodeRegex.test(postalCode);\n    };\n    const validateStartTime = (startTime)=>{\n        const startTimeRegex = new RegExp(/^\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01])$/i);\n        return startTimeRegex.test(startTime);\n    };\n    const validateEmail = (email)=>{\n        const emailRegex = new RegExp(/^[a-z0-9.]{1,64}@[a-z0-9.]{1,64}$/i);\n        return emailRegex.test(email);\n    };\n    const unique = (arr)=>{\n        return arr.filter((v, i, a)=>a.findIndex((v2)=>v2.listingUrl === v.listingUrl) === i);\n    };\n    const handleMatchChange = async (customer)=>{\n        const response = await fetch(\"http://\".concat(process.env.API_HOST, \"/customers/\").concat(customer.UserId), {\n            method: \"GET\",\n            mode: \"no-cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"key\": \"yvmFp/J8vOs7QLcs1fcVpoz0ChDfoZZ5kIl1JdyR0pbEyg7B9XIviOHZmzDV/y/HTwDfGUNt5+VnY0P1\",\n                \"Authorization\": \"Bearer yvmFp/J8vOs7QLcs1fcVpoz0ChDfoZZ5kI/l1JdyR0pbEyg7B9XIviOHZmzDV/y/HTwDfGUNt5+VnY0P’\"\n            }\n        });\n        if (response.status === 200) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Matching is now up to date.\");\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Matching error.\");\n    };\n    const handleCustomerUpdate = async (updateItems, customer)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        if (!validateCanadianPostalCode(customer[\"请填写您的目的地邮编，更好获得附近邻里的帮助\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid postal code A1A 1A1.\");\n        } else if (!validateStartTime(customer[\"rent_date\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid start time yyyy-mm-dd.\");\n        } else if (!validateEmail(customer[\"mail\"])) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Please enter a valid Email. xxx@x.x\");\n        } else {\n            const response = await fetch(\"/api/customers/\".concat(customer.UserId), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    vals: {\n                        ...updateItems,\n                        \"Last Update Date\": dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n                    }\n                })\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                if (!data.error) {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the customer information\");\n                    const new_customer = {\n                        ...customer,\n                        \"Last Update Date\": dayjs__WEBPACK_IMPORTED_MODULE_3___default()(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n                    };\n                    updateCurrentCustomer(new_customer);\n                    return;\n                } else {\n                    react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                    return;\n                }\n            }\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the customer information to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n        }\n    };\n    const getMatchedLandlords = async (tables, ifInternal)=>{\n        let databaseError = false;\n        let serverError = false;\n        let landlords = [];\n        const cities = Object.entries(tables).map((param)=>{\n            let [key, value] = param;\n            return value;\n        });\n        for(const city in cities){\n            const values = [\n                currentCustomer.UserId\n            ];\n            const response = await fetch(\"/api/landlords?table=\".concat(cities[city], \"&values=\").concat(values), {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            if (response.status === 200) {\n                const data = await response.json();\n                const landlordsData = JSON.parse(JSON.stringify(data));\n                if (!data.error) {\n                    if (landlordsData.length > 0) {\n                        landlords = [\n                            ...landlords,\n                            ...landlordsData\n                        ];\n                    }\n                } else {\n                    databaseError = true;\n                }\n            } else {\n                serverError = true;\n            }\n        }\n        if (ifInternal) {\n            landlords = landlords.filter((lan)=>{\n                if (lan.note === \"租客要求看房\" || lan.note === \"房源已发客户\" || !lan.note) {\n                    return lan;\n                }\n            });\n            setMatchedLandlords(unique(landlords));\n        } else {\n            const sortLandlord = [\n                ...landlords\n            ].sort((a, b)=>{\n                if (!a.match_level) return -1;\n                if (!b.match_level) return 1;\n                return a.match_level < b.match_level ? -1 : 1;\n            });\n            setNewHouses(unique(sortLandlord));\n        }\n        if (databaseError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the database. Please contact the technical team or try agian later.\");\n        } else if (serverError) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to fetch the matched landlords from the server side. Please contact the technical team or try again later.\");\n        }\n    };\n    const handleLandlordUpdate = async (table, updateItems, landlord, listingId)=>{\n        if (updateItems.length === 0) {\n            return;\n        }\n        var vals = [\n            currentCustomer.UserId\n        ];\n        if (listingId) {\n            vals = [\n                ...vals,\n                listingId\n            ];\n        } else {\n            vals = [\n                ...vals,\n                landlord.listingAdd\n            ];\n        }\n        const reqBody = {\n            listingId: listingId,\n            table: table,\n            values: vals,\n            updateItems: updateItems\n        };\n        const response = await fetch(\"/api/landlords\", {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(reqBody)\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully updated the landlord note\");\n                if (listingId) {\n                    updateExternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                } else {\n                    updateInternalLandlord({\n                        ...landlord,\n                        ...updateItems\n                    });\n                }\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update the landlord note to the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const updateInternalLandlord = (landlord)=>{\n        const updatedLandlords = matchedLandlords.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingAdd === landlord.listingAdd) {\n                return landlord;\n            }\n            return lan;\n        });\n        setMatchedLandlords(updatedLandlords);\n    };\n    const updateExternalLandlord = (landlord)=>{\n        const updatedLandlords = newHouses.map((lan)=>{\n            if (lan.UserId === landlord.UserId && lan.listingId === landlord.listingId) {\n                return landlord;\n            }\n            return lan;\n        });\n        setNewHouses(updatedLandlords);\n    };\n    const removeMatchedLandlords = async (table)=>{\n        const response = await fetch(\"/api/landlords?table=\".concat(table, \"&customer=\").concat(currentCustomer.UserId), {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        if (response.status === 200) {\n            const data = await response.json();\n            if (!data.error) {\n                filterCustomers();\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Successfully delete the matched landlords\");\n                return;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the database. Error: (\".concat(data.error.code, \"), Please check the input or try agian later.\"));\n                return;\n            }\n        }\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to delete the landlords on the server side. Error code: (\".concat(response.status, \"), Please try again later.\"));\n    };\n    const filterCustomers = ()=>{\n        const displayCustomers = customers.filter((customer)=>customer.rent_status !== \"YES\");\n        setCustomers(displayCustomers);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Context.Provider, {\n        value: {\n            customers,\n            setCustomers,\n            currentCustomer,\n            setCurrentCustomer,\n            filteredCustomersByID,\n            setFilteredCustomersByID,\n            filteredCustomersByEmail,\n            setFilteredCustomersByEmail,\n            filteredCustomersByWechat,\n            setFilteredCustomersByWechat,\n            matchedLandlords,\n            setMatchedLandlords,\n            newHouses,\n            setNewHouses,\n            handleMatchChange,\n            //updateCurrentCustomer,\n            // updateCurrentCustomerByID,\n            // updateCurrentCustomerByEmail,\n            // updateCurrentCustomerByWechat,\n            dayDifference,\n            ifLandlordMatched,\n            handleCustomerUpdate,\n            getMatchedLandlords,\n            handleLandlordUpdate,\n            removeMatchedLandlords,\n            showProfile,\n            setShowProfile,\n            developers,\n            setDevelopers\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\c\\\\Desktop\\\\documents\\\\wml\\\\wml-test-main\\\\wml-test-main\\\\context\\\\StateContext.js\",\n        lineNumber: 293,\n        columnNumber: 9\n    }, undefined);\n};\n_s(StateContext, \"58zMJRRLy2pkIefCljOdM0xcpLw=\");\n_c = StateContext;\nconst useStateContext = ()=>{\n    _s1();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Context);\n};\n_s1(useStateContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"StateContext\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/StateContext.js\n"));

/***/ })

});